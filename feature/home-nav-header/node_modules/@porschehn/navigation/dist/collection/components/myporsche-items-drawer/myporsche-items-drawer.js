import { Component, Element, Host, Listen, Prop, h } from '@stencil/core';
import StateTunnel from '../../services/state-tunnel';
export class MyPorscheItemsDrawer {
    hideDrawer() {
        this.hostElement.style.display = 'none';
    }
    hide() {
        this.hideDrawer();
        this.closeActiveDrawer(2);
    }
    render() {
        return (h(Host, { class: "drawer-level-2-item-scroll" },
            h("div", { class: "drawer-container" },
                h("div", { class: "drawer-back-and-close" },
                    h("phn-back-button", { class: "back-button", buttonId: this.menu[0].PhraseId, text: this.menu[0].Text, onClick: () => this.hide() }),
                    h("phn-close-button", { class: "close-button" })),
                h("phn-headline", { text: "My Porsche", class: "drawer-headline" }),
                h("phn-myporsche-items", null))));
    }
    static get is() { return "phn-myporsche-items-drawer"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["myporsche-items-drawer.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["myporsche-items-drawer.css"]
    }; }
    static get properties() { return {
        "menu": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "ContentItem[]",
                "resolved": "ContentItem[]",
                "references": {
                    "ContentItem": {
                        "location": "import",
                        "path": "../../services/state-tunnel"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "closeActiveDrawer": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "(level: number) => void",
                "resolved": "(level: number) => void",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        }
    }; }
    static get elementRef() { return "hostElement"; }
    static get listeners() { return [{
            "name": "closeEvent",
            "method": "hideDrawer",
            "target": undefined,
            "capture": false,
            "passive": false
        }]; }
}
StateTunnel.injectProps(MyPorscheItemsDrawer, ['menu']);
