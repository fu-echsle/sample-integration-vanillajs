import { r as registerInstance, h, H as Host, g as getElement } from './index-381d535c.js';
import { c as cx, p as prefix, b as insertSlottedStyles } from './index-0a27866a.js';

const textListItemCss = ":host{position:relative !important;display:list-item !important;color:inherit !important;list-style-type:none !important}:host(.p-text-list-item--unordered){padding-left:1.5rem !important}:host(.p-text-list-item--unordered)::before{content:\"\" !important;position:absolute !important;left:0 !important;top:calc(1.5em / 2 - 0.125em) !important;width:0.25rem !important;height:0.25rem !important;background-color:currentColor !important}:host(.p-text-list-item--unordered.p-text-list-item--nested)::before{height:1px !important;width:0.5rem !important;top:calc(1.5em / 2) !important}:host(.p-text-list-item--ordered){padding-left:2.5rem !important}:host(.p-text-list-item--ordered)::before{position:absolute !important;right:calc(100% - 24px) !important;top:0 !important;counter-increment:section !important;text-align:right !important;font-size:1rem;line-height:1.5;font-family:\"Porsche Next\", \"Arial Narrow\", Arial, sans-serif;font-weight:400}:host(.p-text-list-item--ordered-numbered)::before{content:counters(section, \".\", decimal) \".\" !important}:host(.p-text-list-item--ordered-alphabetically)::before{content:counters(section, \".\", lower-latin) \".\" !important}:host(.p-text-list-item--ordered-numbered.p-text-list-item--nested)::before{content:counters(section, \".\", decimal) !important}:host(.p-text-list-item--ordered-alphabetically.p-text-list-item--nested)::before{content:counters(section, \".\", lower-latin) !important}";

const TextListItem = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    componentDidLoad() {
        this.addSlottedStyles();
    }
    render() {
        const textListItemClasses = cx(prefix('text-list-item'), prefix(`text-list-item--${this.typeOfList}`), {
            [prefix(`text-list-item--ordered-${this.typeOfOrderedList}`)]: this.typeOfList === 'ordered',
            [prefix('text-list-item--nested')]: this.isNestedList
        });
        return (h(Host, { role: 'listitem', class: textListItemClasses }, h("slot", null)));
    }
    get typeOfList() {
        const list = this.host.closest(prefix('text-list'));
        return list.getAttribute('list-type');
    }
    get typeOfOrderedList() {
        const list = this.host.closest(prefix('text-list'));
        return list.getAttribute('order-type');
    }
    get isNestedList() {
        return !!this.host.closest(prefix('text-list[nested]'));
    }
    addSlottedStyles() {
        const tagName = this.host.tagName.toLowerCase();
        const style = `${tagName} a {
      outline: none transparent;
      color: inherit;
      text-decoration: underline;
      -webkit-transition: outline-color .24s ease, color .24s ease;
      transition: outline-color .24s ease, color .24s ease;
    }

    ${tagName} a:hover {
      color: #d5001c;
    }

    ${tagName} a:focus {
      outline: 2px solid #00d5b9;
      outline-offset: 1px;
    }
    `;
        insertSlottedStyles(this.host, style);
    }
    get host() { return getElement(this); }
};
TextListItem.style = textListItemCss;

export { TextListItem as p_text_list_item };
