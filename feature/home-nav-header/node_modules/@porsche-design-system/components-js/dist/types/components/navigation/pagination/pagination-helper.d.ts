/**
 * Universal pagination model generation algorithm
 *
 * The idea behind this module is to move the logic of creating pagination out of the component
 * and place it in a separate module.
 *
 * Adapted from ultimate-pagination
 * https://github.com/ultimate-pagination/ultimate-pagination
 *
 */
export declare type PageItemType = 'PAGE';
export declare type EllipsisItemType = 'ELLIPSIS';
export declare type PreviousPageLinkItemType = 'PREVIOUS_PAGE_LINK';
export declare type NextPageLinkItemType = 'NEXT_PAGE_LINK';
export declare type PaginationItemType = PageItemType | EllipsisItemType | PreviousPageLinkItemType | NextPageLinkItemType;
export interface ItemTypes {
    PAGE: PageItemType;
    ELLIPSIS: EllipsisItemType;
    PREVIOUS_PAGE_LINK: PreviousPageLinkItemType;
    NEXT_PAGE_LINK: NextPageLinkItemType;
}
export interface ItemKeys {
    [type: string]: number;
    FIRST_ELLIPSIS: number;
    SECOND_ELLIPSIS: number;
    PREVIOUS_PAGE_LINK: number;
    NEXT_PAGE_LINK: number;
}
export interface PaginationModelOptions {
    activePage: number;
    pageTotal: number;
    pageRange: number;
}
export interface PaginationModelItem {
    key: number;
    value: number;
    isActive: boolean;
    type: PaginationItemType;
}
export declare const itemTypes: ItemTypes;
export declare const createPaginationModel: (options: PaginationModelOptions) => PaginationModelItem[];
export declare const getCurrentActivePage: (activePage: number, totalPages: number) => number;
export declare const getTotalPages: (totalItemsCount: number, itemsPerPage: number) => number;
