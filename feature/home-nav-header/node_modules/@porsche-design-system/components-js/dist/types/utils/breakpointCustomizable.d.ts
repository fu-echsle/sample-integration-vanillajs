declare enum Breakpoint {
    base = "base",
    xs = "xs",
    s = "s",
    m = "m",
    l = "l",
    xl = "xl"
}
declare type BreakpointValue = string | number | boolean;
declare type JSON5String = string;
declare type ClassSuffixes = [string, string];
interface JSXClasses {
    [className: string]: boolean;
}
interface BreakpointValues<T> {
    [Breakpoint.base]: T;
    [Breakpoint.xs]?: T;
    [Breakpoint.s]?: T;
    [Breakpoint.m]?: T;
    [Breakpoint.l]?: T;
    [Breakpoint.xl]?: T;
}
export declare type BreakpointCustomizable<T> = T | BreakpointValues<T> | JSON5String;
/**
 *
 * @param classPrefix
 * @param prop
 * @param classSuffixes
 *  First value in array is used for true boolean values, second for false.
 *  It's only used when prop is a boolean or prop is a object/JSON5 that contains a boolean.
 */
export declare const mapBreakpointPropToPrefixedClasses: (classPrefix: string, prop: BreakpointCustomizable<BreakpointValue>, classSuffixes?: ClassSuffixes) => JSXClasses;
export {};
