import { Component, h, Prop } from '@stencil/core';
import cx from 'classnames';
import { mapBreakpointPropToPrefixedClasses, prefix } from '../../../utils';
export class Divider {
    constructor() {
        /** Defines color depending on theme. */
        this.color = 'neutral-contrast-low';
        /** Defines orientation. */
        this.orientation = 'horizontal';
        /** Adapts color depending on theme. */
        this.theme = 'light';
    }
    render() {
        const dividerClasses = cx(prefix('divider'), prefix(`divider--color-${this.color}`), prefix(`divider--theme-${this.theme}`), mapBreakpointPropToPrefixedClasses('divider--orientation', this.orientation));
        return (h("hr", { class: dividerClasses }));
    }
    static get is() { return "p-divider"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["divider.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["divider.css"]
    }; }
    static get properties() { return {
        "color": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "'neutral-contrast-high' | 'neutral-contrast-medium' | 'neutral-contrast-low'",
                "resolved": "\"neutral-contrast-high\" | \"neutral-contrast-low\" | \"neutral-contrast-medium\"",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "Defines color depending on theme."
            },
            "attribute": "color",
            "reflect": false,
            "defaultValue": "'neutral-contrast-low'"
        },
        "orientation": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "'vertical' | 'horizontal'",
                "resolved": "\"horizontal\" | \"vertical\"",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "Defines orientation."
            },
            "attribute": "orientation",
            "reflect": false,
            "defaultValue": "'horizontal'"
        },
        "theme": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "Theme",
                "resolved": "\"dark\" | \"light\"",
                "references": {
                    "Theme": {
                        "location": "import",
                        "path": "../../../types"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "Adapts color depending on theme."
            },
            "attribute": "theme",
            "reflect": false,
            "defaultValue": "'light'"
        }
    }; }
}
