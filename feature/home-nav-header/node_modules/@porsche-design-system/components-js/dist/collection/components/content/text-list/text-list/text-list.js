import { Component, Prop, h, Host, Element } from '@stencil/core';
import cx from 'classnames';
import { prefix } from '../../../../utils';
export class TextList {
    constructor() {
        /** The type of the text list. */
        this.listType = 'unordered';
        /** The list style type of an ordered list. */
        this.orderType = 'numbered';
        /** Adapts the text color depending on the theme. Has no effect when "inherit" is set as color prop. */
        this.theme = 'light';
    }
    render() {
        const TagType = this.listType === 'unordered' ? 'ul' : 'ol';
        const textListClasses = cx(prefix('text-list'), prefix(`text-list--${this.listType}`), prefix(`text-list--theme-${this.theme}`), this.isNestedList && prefix('text-list--nested'));
        return (h(Host, { nested: this.isNestedList },
            h(TagType, { role: 'list', class: textListClasses },
                h("slot", null))));
    }
    get isNestedList() {
        return !!this.host.closest(prefix('text-list-item'));
    }
    static get is() { return "p-text-list"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["text-list.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["text-list.css"]
    }; }
    static get properties() { return {
        "listType": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "'unordered' | 'ordered'",
                "resolved": "\"ordered\" | \"unordered\"",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "The type of the text list."
            },
            "attribute": "list-type",
            "reflect": true,
            "defaultValue": "'unordered'"
        },
        "orderType": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "'numbered' | 'alphabetically'",
                "resolved": "\"alphabetically\" | \"numbered\"",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "The list style type of an ordered list."
            },
            "attribute": "order-type",
            "reflect": true,
            "defaultValue": "'numbered'"
        },
        "theme": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "Theme",
                "resolved": "\"dark\" | \"light\"",
                "references": {
                    "Theme": {
                        "location": "import",
                        "path": "../../../../types"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop."
            },
            "attribute": "theme",
            "reflect": false,
            "defaultValue": "'light'"
        }
    }; }
    static get elementRef() { return "host"; }
}
