/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
import { ContentItem, ContentItemWithItems, } from "./services/state-tunnel";
import { Series, } from "./components/entities/series";
import { Item, LinkItem, TextItem, } from "./components/entities/item";
export namespace Components {
    interface PhnBackButton {
        "buttonId": string;
        "text": string;
    }
    interface PhnBurgerButton {
        "menu": ContentItem[];
    }
    interface PhnButtonExtended {
        "icon": string;
    }
    interface PhnCarFurtherLinks {
        "items": ContentItem[];
    }
    interface PhnCarMetaFunctionalities {
        "items": ContentItem[];
        "name": string;
    }
    interface PhnCarModel {
        "env": string;
        "image": string;
        "link": string;
        "text": string;
    }
    interface PhnCarModelList {
        "series": Series;
    }
    interface PhnCarSeries {
        "env": string;
        "image": string;
        "text": string;
    }
    interface PhnCarSeriesList {
        "carSeries": Series[];
        "hideOverlayHandler": (overlayElement: HTMLElement) => void;
        "keyboardHideOverlayHandler": () => void;
        "keyboardShowOverlayHandler": (overlayElement: HTMLElement) => void;
        "showOverlayHandler": (overlayElement: HTMLElement) => void;
    }
    interface PhnCarSeriesModelOverview {
        "series": Series;
        "triggerAnalyticsEvent": () => Promise<void>;
    }
    interface PhnCloseButton {
    }
    interface PhnCrest {
        "menu": ContentItem[];
    }
    interface PhnDealerSearch {
        "dealerSearchLink": string;
        "dealerSearchText": string;
        "sendMetaFunctionClickAnalyticsEvent": (item: LinkItem) => void;
    }
    interface PhnDrawerCarSeriesModelOverview {
        "closeActiveDrawer": (level: number) => void;
        "menu": ContentItem[];
        "series": Series;
    }
    interface PhnDrawerShopsAndMore {
        "backButtonId": string;
        "backButtonText": string;
        "closeActiveDrawer": (level: number) => void;
        "headline": string;
        "item": Item;
        "level": number;
        "menu": ContentItem[];
        "setActiveDrawer": (el: HTMLElement, level: number) => void;
    }
    interface PhnHeader {
        "accessToken": string;
        "env": string;
        "locale": string;
    }
    interface PhnHeadline {
        "text": string;
    }
    interface PhnListItem {
        "item": Item;
    }
    interface PhnMegaFlyOutOverlay {
        "deactivateState": () => Promise<void>;
        "env": string;
        "hideOverlay": () => Promise<void>;
        "hideOverlayHandler": (overlayElement: HTMLElement) => void;
        "keyboardHideOverlayHandler": () => void;
        "keyboardShowOverlayHandler": (overlayElement: HTMLElement) => void;
        "showOverlay": () => Promise<void>;
        "showOverlayHandler": (overlayElement: HTMLElement) => void;
    }
    interface PhnMenuDesktopLevel1 {
        "more": TextItem[];
        "seriesList": Series[];
        "shops": TextItem[];
    }
    interface PhnMenuDrawerLevel1 {
        "more": TextItem[];
        "seriesList": Series[];
        "shops": TextItem[];
        "show": () => Promise<void>;
    }
    interface PhnMetaFunctionalities {
        "closeActiveDrawer": (level: number) => void;
        "metafunctionalities": ContentItemWithItems[];
        "setActiveDrawer": (element: HTMLElement, level: number) => void;
    }
    interface PhnMobileCarSeriesList {
        "carSeries": Series[];
        "closeActiveDrawer": (level: number) => void;
        "hideAll": () => Promise<void>;
        "setActiveDrawer": (el: HTMLElement, level: number) => void;
    }
    interface PhnMobileShopsAndMore {
        "closeActiveDrawer": (level: number) => void;
        "items": Item[];
        "setActiveDrawer": (el: HTMLElement, level: number) => void;
    }
    interface PhnMyporsche {
        "closeActiveDrawer": (level: number) => void;
        "loggedInState": string;
        "loggedInStatusTranslations": {};
        "myporscheLink": string;
        "myporscheText": string;
        "sendMetaFunctionClickAnalyticsEvent": (linkItem: LinkItem) => void;
        "setActiveDrawer": (element: HTMLElement, level: number) => void;
    }
    interface PhnMyporscheDrawer {
        "closeActiveDrawer": (level: number) => void;
        "loginStatus": string;
        "myPorscheText": string;
        "setActiveDrawer": (element: HTMLElement, level: number) => void;
    }
    interface PhnMyporscheFlyout {
        "env": string;
        "loginStatus": string;
        "myPorscheText": string;
    }
    interface PhnMyporscheItems {
        "env": string;
        "metafunctionalities": ContentItemWithItems[];
        "myPorscheCloseHandler": () => void;
    }
    interface PhnMyporscheItemsDrawer {
        "closeActiveDrawer": (level: number) => void;
        "menu": ContentItem[];
    }
    interface PhnPreviewBadge {
        "versionString": string;
    }
    interface PhnShopsAndMore {
        "hideOverlayHandler": any;
        "items": Item[];
        "keyboardHideOverlayHandler": () => void;
        "keyboardShowOverlayHandler": (overlayElement: HTMLElement) => void;
        "showOverlayHandler": any;
    }
    interface PhnShopsAndMoreItem {
        "item": Item;
    }
    interface PhnShopsAndMoreOverview {
        "item": Item;
        "triggerAnalyticsEvent": () => Promise<void>;
    }
}
declare global {
    interface HTMLPhnBackButtonElement extends Components.PhnBackButton, HTMLStencilElement {
    }
    var HTMLPhnBackButtonElement: {
        prototype: HTMLPhnBackButtonElement;
        new (): HTMLPhnBackButtonElement;
    };
    interface HTMLPhnBurgerButtonElement extends Components.PhnBurgerButton, HTMLStencilElement {
    }
    var HTMLPhnBurgerButtonElement: {
        prototype: HTMLPhnBurgerButtonElement;
        new (): HTMLPhnBurgerButtonElement;
    };
    interface HTMLPhnButtonExtendedElement extends Components.PhnButtonExtended, HTMLStencilElement {
    }
    var HTMLPhnButtonExtendedElement: {
        prototype: HTMLPhnButtonExtendedElement;
        new (): HTMLPhnButtonExtendedElement;
    };
    interface HTMLPhnCarFurtherLinksElement extends Components.PhnCarFurtherLinks, HTMLStencilElement {
    }
    var HTMLPhnCarFurtherLinksElement: {
        prototype: HTMLPhnCarFurtherLinksElement;
        new (): HTMLPhnCarFurtherLinksElement;
    };
    interface HTMLPhnCarMetaFunctionalitiesElement extends Components.PhnCarMetaFunctionalities, HTMLStencilElement {
    }
    var HTMLPhnCarMetaFunctionalitiesElement: {
        prototype: HTMLPhnCarMetaFunctionalitiesElement;
        new (): HTMLPhnCarMetaFunctionalitiesElement;
    };
    interface HTMLPhnCarModelElement extends Components.PhnCarModel, HTMLStencilElement {
    }
    var HTMLPhnCarModelElement: {
        prototype: HTMLPhnCarModelElement;
        new (): HTMLPhnCarModelElement;
    };
    interface HTMLPhnCarModelListElement extends Components.PhnCarModelList, HTMLStencilElement {
    }
    var HTMLPhnCarModelListElement: {
        prototype: HTMLPhnCarModelListElement;
        new (): HTMLPhnCarModelListElement;
    };
    interface HTMLPhnCarSeriesElement extends Components.PhnCarSeries, HTMLStencilElement {
    }
    var HTMLPhnCarSeriesElement: {
        prototype: HTMLPhnCarSeriesElement;
        new (): HTMLPhnCarSeriesElement;
    };
    interface HTMLPhnCarSeriesListElement extends Components.PhnCarSeriesList, HTMLStencilElement {
    }
    var HTMLPhnCarSeriesListElement: {
        prototype: HTMLPhnCarSeriesListElement;
        new (): HTMLPhnCarSeriesListElement;
    };
    interface HTMLPhnCarSeriesModelOverviewElement extends Components.PhnCarSeriesModelOverview, HTMLStencilElement {
    }
    var HTMLPhnCarSeriesModelOverviewElement: {
        prototype: HTMLPhnCarSeriesModelOverviewElement;
        new (): HTMLPhnCarSeriesModelOverviewElement;
    };
    interface HTMLPhnCloseButtonElement extends Components.PhnCloseButton, HTMLStencilElement {
    }
    var HTMLPhnCloseButtonElement: {
        prototype: HTMLPhnCloseButtonElement;
        new (): HTMLPhnCloseButtonElement;
    };
    interface HTMLPhnCrestElement extends Components.PhnCrest, HTMLStencilElement {
    }
    var HTMLPhnCrestElement: {
        prototype: HTMLPhnCrestElement;
        new (): HTMLPhnCrestElement;
    };
    interface HTMLPhnDealerSearchElement extends Components.PhnDealerSearch, HTMLStencilElement {
    }
    var HTMLPhnDealerSearchElement: {
        prototype: HTMLPhnDealerSearchElement;
        new (): HTMLPhnDealerSearchElement;
    };
    interface HTMLPhnDrawerCarSeriesModelOverviewElement extends Components.PhnDrawerCarSeriesModelOverview, HTMLStencilElement {
    }
    var HTMLPhnDrawerCarSeriesModelOverviewElement: {
        prototype: HTMLPhnDrawerCarSeriesModelOverviewElement;
        new (): HTMLPhnDrawerCarSeriesModelOverviewElement;
    };
    interface HTMLPhnDrawerShopsAndMoreElement extends Components.PhnDrawerShopsAndMore, HTMLStencilElement {
    }
    var HTMLPhnDrawerShopsAndMoreElement: {
        prototype: HTMLPhnDrawerShopsAndMoreElement;
        new (): HTMLPhnDrawerShopsAndMoreElement;
    };
    interface HTMLPhnHeaderElement extends Components.PhnHeader, HTMLStencilElement {
    }
    var HTMLPhnHeaderElement: {
        prototype: HTMLPhnHeaderElement;
        new (): HTMLPhnHeaderElement;
    };
    interface HTMLPhnHeadlineElement extends Components.PhnHeadline, HTMLStencilElement {
    }
    var HTMLPhnHeadlineElement: {
        prototype: HTMLPhnHeadlineElement;
        new (): HTMLPhnHeadlineElement;
    };
    interface HTMLPhnListItemElement extends Components.PhnListItem, HTMLStencilElement {
    }
    var HTMLPhnListItemElement: {
        prototype: HTMLPhnListItemElement;
        new (): HTMLPhnListItemElement;
    };
    interface HTMLPhnMegaFlyOutOverlayElement extends Components.PhnMegaFlyOutOverlay, HTMLStencilElement {
    }
    var HTMLPhnMegaFlyOutOverlayElement: {
        prototype: HTMLPhnMegaFlyOutOverlayElement;
        new (): HTMLPhnMegaFlyOutOverlayElement;
    };
    interface HTMLPhnMenuDesktopLevel1Element extends Components.PhnMenuDesktopLevel1, HTMLStencilElement {
    }
    var HTMLPhnMenuDesktopLevel1Element: {
        prototype: HTMLPhnMenuDesktopLevel1Element;
        new (): HTMLPhnMenuDesktopLevel1Element;
    };
    interface HTMLPhnMenuDrawerLevel1Element extends Components.PhnMenuDrawerLevel1, HTMLStencilElement {
    }
    var HTMLPhnMenuDrawerLevel1Element: {
        prototype: HTMLPhnMenuDrawerLevel1Element;
        new (): HTMLPhnMenuDrawerLevel1Element;
    };
    interface HTMLPhnMetaFunctionalitiesElement extends Components.PhnMetaFunctionalities, HTMLStencilElement {
    }
    var HTMLPhnMetaFunctionalitiesElement: {
        prototype: HTMLPhnMetaFunctionalitiesElement;
        new (): HTMLPhnMetaFunctionalitiesElement;
    };
    interface HTMLPhnMobileCarSeriesListElement extends Components.PhnMobileCarSeriesList, HTMLStencilElement {
    }
    var HTMLPhnMobileCarSeriesListElement: {
        prototype: HTMLPhnMobileCarSeriesListElement;
        new (): HTMLPhnMobileCarSeriesListElement;
    };
    interface HTMLPhnMobileShopsAndMoreElement extends Components.PhnMobileShopsAndMore, HTMLStencilElement {
    }
    var HTMLPhnMobileShopsAndMoreElement: {
        prototype: HTMLPhnMobileShopsAndMoreElement;
        new (): HTMLPhnMobileShopsAndMoreElement;
    };
    interface HTMLPhnMyporscheElement extends Components.PhnMyporsche, HTMLStencilElement {
    }
    var HTMLPhnMyporscheElement: {
        prototype: HTMLPhnMyporscheElement;
        new (): HTMLPhnMyporscheElement;
    };
    interface HTMLPhnMyporscheDrawerElement extends Components.PhnMyporscheDrawer, HTMLStencilElement {
    }
    var HTMLPhnMyporscheDrawerElement: {
        prototype: HTMLPhnMyporscheDrawerElement;
        new (): HTMLPhnMyporscheDrawerElement;
    };
    interface HTMLPhnMyporscheFlyoutElement extends Components.PhnMyporscheFlyout, HTMLStencilElement {
    }
    var HTMLPhnMyporscheFlyoutElement: {
        prototype: HTMLPhnMyporscheFlyoutElement;
        new (): HTMLPhnMyporscheFlyoutElement;
    };
    interface HTMLPhnMyporscheItemsElement extends Components.PhnMyporscheItems, HTMLStencilElement {
    }
    var HTMLPhnMyporscheItemsElement: {
        prototype: HTMLPhnMyporscheItemsElement;
        new (): HTMLPhnMyporscheItemsElement;
    };
    interface HTMLPhnMyporscheItemsDrawerElement extends Components.PhnMyporscheItemsDrawer, HTMLStencilElement {
    }
    var HTMLPhnMyporscheItemsDrawerElement: {
        prototype: HTMLPhnMyporscheItemsDrawerElement;
        new (): HTMLPhnMyporscheItemsDrawerElement;
    };
    interface HTMLPhnPreviewBadgeElement extends Components.PhnPreviewBadge, HTMLStencilElement {
    }
    var HTMLPhnPreviewBadgeElement: {
        prototype: HTMLPhnPreviewBadgeElement;
        new (): HTMLPhnPreviewBadgeElement;
    };
    interface HTMLPhnShopsAndMoreElement extends Components.PhnShopsAndMore, HTMLStencilElement {
    }
    var HTMLPhnShopsAndMoreElement: {
        prototype: HTMLPhnShopsAndMoreElement;
        new (): HTMLPhnShopsAndMoreElement;
    };
    interface HTMLPhnShopsAndMoreItemElement extends Components.PhnShopsAndMoreItem, HTMLStencilElement {
    }
    var HTMLPhnShopsAndMoreItemElement: {
        prototype: HTMLPhnShopsAndMoreItemElement;
        new (): HTMLPhnShopsAndMoreItemElement;
    };
    interface HTMLPhnShopsAndMoreOverviewElement extends Components.PhnShopsAndMoreOverview, HTMLStencilElement {
    }
    var HTMLPhnShopsAndMoreOverviewElement: {
        prototype: HTMLPhnShopsAndMoreOverviewElement;
        new (): HTMLPhnShopsAndMoreOverviewElement;
    };
    interface HTMLElementTagNameMap {
        "phn-back-button": HTMLPhnBackButtonElement;
        "phn-burger-button": HTMLPhnBurgerButtonElement;
        "phn-button-extended": HTMLPhnButtonExtendedElement;
        "phn-car-further-links": HTMLPhnCarFurtherLinksElement;
        "phn-car-meta-functionalities": HTMLPhnCarMetaFunctionalitiesElement;
        "phn-car-model": HTMLPhnCarModelElement;
        "phn-car-model-list": HTMLPhnCarModelListElement;
        "phn-car-series": HTMLPhnCarSeriesElement;
        "phn-car-series-list": HTMLPhnCarSeriesListElement;
        "phn-car-series-model-overview": HTMLPhnCarSeriesModelOverviewElement;
        "phn-close-button": HTMLPhnCloseButtonElement;
        "phn-crest": HTMLPhnCrestElement;
        "phn-dealer-search": HTMLPhnDealerSearchElement;
        "phn-drawer-car-series-model-overview": HTMLPhnDrawerCarSeriesModelOverviewElement;
        "phn-drawer-shops-and-more": HTMLPhnDrawerShopsAndMoreElement;
        "phn-header": HTMLPhnHeaderElement;
        "phn-headline": HTMLPhnHeadlineElement;
        "phn-list-item": HTMLPhnListItemElement;
        "phn-mega-fly-out-overlay": HTMLPhnMegaFlyOutOverlayElement;
        "phn-menu-desktop-level-1": HTMLPhnMenuDesktopLevel1Element;
        "phn-menu-drawer-level-1": HTMLPhnMenuDrawerLevel1Element;
        "phn-meta-functionalities": HTMLPhnMetaFunctionalitiesElement;
        "phn-mobile-car-series-list": HTMLPhnMobileCarSeriesListElement;
        "phn-mobile-shops-and-more": HTMLPhnMobileShopsAndMoreElement;
        "phn-myporsche": HTMLPhnMyporscheElement;
        "phn-myporsche-drawer": HTMLPhnMyporscheDrawerElement;
        "phn-myporsche-flyout": HTMLPhnMyporscheFlyoutElement;
        "phn-myporsche-items": HTMLPhnMyporscheItemsElement;
        "phn-myporsche-items-drawer": HTMLPhnMyporscheItemsDrawerElement;
        "phn-preview-badge": HTMLPhnPreviewBadgeElement;
        "phn-shops-and-more": HTMLPhnShopsAndMoreElement;
        "phn-shops-and-more-item": HTMLPhnShopsAndMoreItemElement;
        "phn-shops-and-more-overview": HTMLPhnShopsAndMoreOverviewElement;
    }
}
declare namespace LocalJSX {
    interface PhnBackButton {
        "buttonId"?: string;
        "text"?: string;
    }
    interface PhnBurgerButton {
        "menu"?: ContentItem[];
    }
    interface PhnButtonExtended {
        "icon"?: string;
    }
    interface PhnCarFurtherLinks {
        "items"?: ContentItem[];
    }
    interface PhnCarMetaFunctionalities {
        "items"?: ContentItem[];
        "name"?: string;
    }
    interface PhnCarModel {
        "env"?: string;
        "image"?: string;
        "link"?: string;
        "text"?: string;
    }
    interface PhnCarModelList {
        "series"?: Series;
    }
    interface PhnCarSeries {
        "env"?: string;
        "image"?: string;
        "text"?: string;
    }
    interface PhnCarSeriesList {
        "carSeries"?: Series[];
        "hideOverlayHandler"?: (overlayElement: HTMLElement) => void;
        "keyboardHideOverlayHandler"?: () => void;
        "keyboardShowOverlayHandler"?: (overlayElement: HTMLElement) => void;
        "showOverlayHandler"?: (overlayElement: HTMLElement) => void;
    }
    interface PhnCarSeriesModelOverview {
        "series"?: Series;
    }
    interface PhnCloseButton {
        "onCloseEvent"?: (event: CustomEvent<any>) => void;
    }
    interface PhnCrest {
        "menu"?: ContentItem[];
    }
    interface PhnDealerSearch {
        "dealerSearchLink"?: string;
        "dealerSearchText"?: string;
        "sendMetaFunctionClickAnalyticsEvent"?: (item: LinkItem) => void;
    }
    interface PhnDrawerCarSeriesModelOverview {
        "closeActiveDrawer"?: (level: number) => void;
        "menu"?: ContentItem[];
        "series"?: Series;
    }
    interface PhnDrawerShopsAndMore {
        "backButtonId"?: string;
        "backButtonText"?: string;
        "closeActiveDrawer"?: (level: number) => void;
        "headline"?: string;
        "item"?: Item;
        "level"?: number;
        "menu"?: ContentItem[];
        "setActiveDrawer"?: (el: HTMLElement, level: number) => void;
    }
    interface PhnHeader {
        "accessToken"?: string;
        "env"?: string;
        "locale"?: string;
        "onAccessTokenExpired"?: (event: CustomEvent<any>) => void;
        "onNavigationDidLoad"?: (event: CustomEvent<any>) => void;
    }
    interface PhnHeadline {
        "text"?: string;
    }
    interface PhnListItem {
        "item"?: Item;
    }
    interface PhnMegaFlyOutOverlay {
        "env"?: string;
        "hideOverlayHandler"?: (overlayElement: HTMLElement) => void;
        "keyboardHideOverlayHandler"?: () => void;
        "keyboardShowOverlayHandler"?: (overlayElement: HTMLElement) => void;
        "showOverlayHandler"?: (overlayElement: HTMLElement) => void;
    }
    interface PhnMenuDesktopLevel1 {
        "more"?: TextItem[];
        "seriesList"?: Series[];
        "shops"?: TextItem[];
    }
    interface PhnMenuDrawerLevel1 {
        "more"?: TextItem[];
        "onMenuOverlayClose"?: (event: CustomEvent<any>) => void;
        "onMenuOverlayOpen"?: (event: CustomEvent<any>) => void;
        "seriesList"?: Series[];
        "shops"?: TextItem[];
    }
    interface PhnMetaFunctionalities {
        "closeActiveDrawer"?: (level: number) => void;
        "metafunctionalities"?: ContentItemWithItems[];
        "setActiveDrawer"?: (element: HTMLElement, level: number) => void;
    }
    interface PhnMobileCarSeriesList {
        "carSeries"?: Series[];
        "closeActiveDrawer"?: (level: number) => void;
        "setActiveDrawer"?: (el: HTMLElement, level: number) => void;
    }
    interface PhnMobileShopsAndMore {
        "closeActiveDrawer"?: (level: number) => void;
        "items"?: Item[];
        "setActiveDrawer"?: (el: HTMLElement, level: number) => void;
    }
    interface PhnMyporsche {
        "closeActiveDrawer"?: (level: number) => void;
        "loggedInState"?: string;
        "loggedInStatusTranslations"?: {};
        "myporscheLink"?: string;
        "myporscheText"?: string;
        "sendMetaFunctionClickAnalyticsEvent"?: (linkItem: LinkItem) => void;
        "setActiveDrawer"?: (element: HTMLElement, level: number) => void;
    }
    interface PhnMyporscheDrawer {
        "closeActiveDrawer"?: (level: number) => void;
        "loginStatus"?: string;
        "myPorscheText"?: string;
        "setActiveDrawer"?: (element: HTMLElement, level: number) => void;
    }
    interface PhnMyporscheFlyout {
        "env"?: string;
        "loginStatus"?: string;
        "myPorscheText"?: string;
    }
    interface PhnMyporscheItems {
        "env"?: string;
        "metafunctionalities"?: ContentItemWithItems[];
        "myPorscheCloseHandler"?: () => void;
    }
    interface PhnMyporscheItemsDrawer {
        "closeActiveDrawer"?: (level: number) => void;
        "menu"?: ContentItem[];
    }
    interface PhnPreviewBadge {
        "versionString"?: string;
    }
    interface PhnShopsAndMore {
        "hideOverlayHandler"?: any;
        "items"?: Item[];
        "keyboardHideOverlayHandler"?: () => void;
        "keyboardShowOverlayHandler"?: (overlayElement: HTMLElement) => void;
        "showOverlayHandler"?: any;
    }
    interface PhnShopsAndMoreItem {
        "item"?: Item;
    }
    interface PhnShopsAndMoreOverview {
        "item"?: Item;
    }
    interface IntrinsicElements {
        "phn-back-button": PhnBackButton;
        "phn-burger-button": PhnBurgerButton;
        "phn-button-extended": PhnButtonExtended;
        "phn-car-further-links": PhnCarFurtherLinks;
        "phn-car-meta-functionalities": PhnCarMetaFunctionalities;
        "phn-car-model": PhnCarModel;
        "phn-car-model-list": PhnCarModelList;
        "phn-car-series": PhnCarSeries;
        "phn-car-series-list": PhnCarSeriesList;
        "phn-car-series-model-overview": PhnCarSeriesModelOverview;
        "phn-close-button": PhnCloseButton;
        "phn-crest": PhnCrest;
        "phn-dealer-search": PhnDealerSearch;
        "phn-drawer-car-series-model-overview": PhnDrawerCarSeriesModelOverview;
        "phn-drawer-shops-and-more": PhnDrawerShopsAndMore;
        "phn-header": PhnHeader;
        "phn-headline": PhnHeadline;
        "phn-list-item": PhnListItem;
        "phn-mega-fly-out-overlay": PhnMegaFlyOutOverlay;
        "phn-menu-desktop-level-1": PhnMenuDesktopLevel1;
        "phn-menu-drawer-level-1": PhnMenuDrawerLevel1;
        "phn-meta-functionalities": PhnMetaFunctionalities;
        "phn-mobile-car-series-list": PhnMobileCarSeriesList;
        "phn-mobile-shops-and-more": PhnMobileShopsAndMore;
        "phn-myporsche": PhnMyporsche;
        "phn-myporsche-drawer": PhnMyporscheDrawer;
        "phn-myporsche-flyout": PhnMyporscheFlyout;
        "phn-myporsche-items": PhnMyporscheItems;
        "phn-myporsche-items-drawer": PhnMyporscheItemsDrawer;
        "phn-preview-badge": PhnPreviewBadge;
        "phn-shops-and-more": PhnShopsAndMore;
        "phn-shops-and-more-item": PhnShopsAndMoreItem;
        "phn-shops-and-more-overview": PhnShopsAndMoreOverview;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "phn-back-button": LocalJSX.PhnBackButton & JSXBase.HTMLAttributes<HTMLPhnBackButtonElement>;
            "phn-burger-button": LocalJSX.PhnBurgerButton & JSXBase.HTMLAttributes<HTMLPhnBurgerButtonElement>;
            "phn-button-extended": LocalJSX.PhnButtonExtended & JSXBase.HTMLAttributes<HTMLPhnButtonExtendedElement>;
            "phn-car-further-links": LocalJSX.PhnCarFurtherLinks & JSXBase.HTMLAttributes<HTMLPhnCarFurtherLinksElement>;
            "phn-car-meta-functionalities": LocalJSX.PhnCarMetaFunctionalities & JSXBase.HTMLAttributes<HTMLPhnCarMetaFunctionalitiesElement>;
            "phn-car-model": LocalJSX.PhnCarModel & JSXBase.HTMLAttributes<HTMLPhnCarModelElement>;
            "phn-car-model-list": LocalJSX.PhnCarModelList & JSXBase.HTMLAttributes<HTMLPhnCarModelListElement>;
            "phn-car-series": LocalJSX.PhnCarSeries & JSXBase.HTMLAttributes<HTMLPhnCarSeriesElement>;
            "phn-car-series-list": LocalJSX.PhnCarSeriesList & JSXBase.HTMLAttributes<HTMLPhnCarSeriesListElement>;
            "phn-car-series-model-overview": LocalJSX.PhnCarSeriesModelOverview & JSXBase.HTMLAttributes<HTMLPhnCarSeriesModelOverviewElement>;
            "phn-close-button": LocalJSX.PhnCloseButton & JSXBase.HTMLAttributes<HTMLPhnCloseButtonElement>;
            "phn-crest": LocalJSX.PhnCrest & JSXBase.HTMLAttributes<HTMLPhnCrestElement>;
            "phn-dealer-search": LocalJSX.PhnDealerSearch & JSXBase.HTMLAttributes<HTMLPhnDealerSearchElement>;
            "phn-drawer-car-series-model-overview": LocalJSX.PhnDrawerCarSeriesModelOverview & JSXBase.HTMLAttributes<HTMLPhnDrawerCarSeriesModelOverviewElement>;
            "phn-drawer-shops-and-more": LocalJSX.PhnDrawerShopsAndMore & JSXBase.HTMLAttributes<HTMLPhnDrawerShopsAndMoreElement>;
            "phn-header": LocalJSX.PhnHeader & JSXBase.HTMLAttributes<HTMLPhnHeaderElement>;
            "phn-headline": LocalJSX.PhnHeadline & JSXBase.HTMLAttributes<HTMLPhnHeadlineElement>;
            "phn-list-item": LocalJSX.PhnListItem & JSXBase.HTMLAttributes<HTMLPhnListItemElement>;
            "phn-mega-fly-out-overlay": LocalJSX.PhnMegaFlyOutOverlay & JSXBase.HTMLAttributes<HTMLPhnMegaFlyOutOverlayElement>;
            "phn-menu-desktop-level-1": LocalJSX.PhnMenuDesktopLevel1 & JSXBase.HTMLAttributes<HTMLPhnMenuDesktopLevel1Element>;
            "phn-menu-drawer-level-1": LocalJSX.PhnMenuDrawerLevel1 & JSXBase.HTMLAttributes<HTMLPhnMenuDrawerLevel1Element>;
            "phn-meta-functionalities": LocalJSX.PhnMetaFunctionalities & JSXBase.HTMLAttributes<HTMLPhnMetaFunctionalitiesElement>;
            "phn-mobile-car-series-list": LocalJSX.PhnMobileCarSeriesList & JSXBase.HTMLAttributes<HTMLPhnMobileCarSeriesListElement>;
            "phn-mobile-shops-and-more": LocalJSX.PhnMobileShopsAndMore & JSXBase.HTMLAttributes<HTMLPhnMobileShopsAndMoreElement>;
            "phn-myporsche": LocalJSX.PhnMyporsche & JSXBase.HTMLAttributes<HTMLPhnMyporscheElement>;
            "phn-myporsche-drawer": LocalJSX.PhnMyporscheDrawer & JSXBase.HTMLAttributes<HTMLPhnMyporscheDrawerElement>;
            "phn-myporsche-flyout": LocalJSX.PhnMyporscheFlyout & JSXBase.HTMLAttributes<HTMLPhnMyporscheFlyoutElement>;
            "phn-myporsche-items": LocalJSX.PhnMyporscheItems & JSXBase.HTMLAttributes<HTMLPhnMyporscheItemsElement>;
            "phn-myporsche-items-drawer": LocalJSX.PhnMyporscheItemsDrawer & JSXBase.HTMLAttributes<HTMLPhnMyporscheItemsDrawerElement>;
            "phn-preview-badge": LocalJSX.PhnPreviewBadge & JSXBase.HTMLAttributes<HTMLPhnPreviewBadgeElement>;
            "phn-shops-and-more": LocalJSX.PhnShopsAndMore & JSXBase.HTMLAttributes<HTMLPhnShopsAndMoreElement>;
            "phn-shops-and-more-item": LocalJSX.PhnShopsAndMoreItem & JSXBase.HTMLAttributes<HTMLPhnShopsAndMoreItemElement>;
            "phn-shops-and-more-overview": LocalJSX.PhnShopsAndMoreOverview & JSXBase.HTMLAttributes<HTMLPhnShopsAndMoreOverviewElement>;
        }
    }
}
