import gsap from 'gsap';
/* We can revert to commit 70b732e8ff9c19abbd3210fc56e4e32838fa1a8f
 * in case we need to go back to clip-path animations for Chrome.
 * We have reverted the clip-path animation because of the flickering line
 * that appears due to the clip-path animations.
 * clip-path was the closest animation to the mock-ups suggested by Daniel
 * and are linked in JIRA card HOMENAV-629, but we could not find a way
 *  to remove the flickering bug. */
export class OverlayAnimation {
    constructor() {
        this.killAnimation = (animation) => {
            if (animation) {
                animation.kill();
            }
        };
        this.slideDown = (element) => {
            this.killAnimation(this.showOverlay);
            this.killAnimation(this.hideOverlay);
            this.showOverlay = gsap.to(element, {
                maxHeight: '1000px',
                duration: 0.54,
                ease: 'sine.inOut',
                visibility: 'visible'
            });
        };
        this.show = (element) => {
            this.killAnimation(this.showOverlay);
            this.killAnimation(this.hideOverlay);
            this.showOverlay = gsap.set(element, {
                maxHeight: '1000px',
                visibility: 'visible'
            });
        };
        this.hide = (element) => {
            this.killAnimation(this.showOverlay);
            this.killAnimation(this.hideOverlay);
            this.hideOverlay = gsap.set(element, {
                maxHeight: '0',
                onComplete: () => {
                    element.style.visibility = 'hidden';
                }
            });
        };
        this.slideUp = (element) => {
            this.killAnimation(this.showOverlay);
            this.killAnimation(this.hideOverlay);
            this.hideOverlay = gsap.to(element, {
                maxHeight: '0',
                duration: 0.43,
                ease: 'sine.inOut',
                onComplete: () => {
                    element.style.visibility = 'hidden';
                },
                onInterrupt: () => {
                    element.style.visibility = 'hidden';
                }
            });
        };
    }
}
