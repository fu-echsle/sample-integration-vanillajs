import { Component, Prop, h } from '@stencil/core';
import { navContentStore } from '../../state/nav-content-store';
export class ShopsAndMore {
    getItems() {
        const items = [];
        const shops = navContentStore.get('shops');
        const more = navContentStore.get('more');
        if (shops && shops.length > 0) {
            items.push(shops[0]);
        }
        if (more && more.length > 0) {
            items.push(more[0]);
        }
        return items;
    }
    render() {
        const items = this.getItems();
        return (h("div", { class: "shops-and-more" }, items.map((item) => {
            return (h("phn-mega-fly-out-overlay", { class: "shops-and-more-overlay-trigger overlay-trigger", showOverlayHandler: this.showOverlayHandler, hideOverlayHandler: this.hideOverlayHandler, keyboardShowOverlayHandler: this.keyboardShowOverlayHandler, keyboardHideOverlayHandler: this.keyboardHideOverlayHandler },
                h("phn-desktop-shop-and-more-item", { slot: "button", itemText: item.Text, class: "desktop-shop-and-more-item" }),
                h("phn-shops-and-more-overview", { slot: "content", item: item })));
        })));
    }
    static get is() { return "phn-shops-and-more"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["shops-and-more.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["shops-and-more.css"]
    }; }
    static get properties() { return {
        "showOverlayHandler": {
            "type": "any",
            "mutable": false,
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "show-overlay-handler",
            "reflect": false
        },
        "hideOverlayHandler": {
            "type": "any",
            "mutable": false,
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "hide-overlay-handler",
            "reflect": false
        },
        "keyboardShowOverlayHandler": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "(overlayElement: HTMLElement) => void",
                "resolved": "(overlayElement: HTMLElement) => void",
                "references": {
                    "HTMLElement": {
                        "location": "global"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "keyboardHideOverlayHandler": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "() => void",
                "resolved": "() => void",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        }
    }; }
}
