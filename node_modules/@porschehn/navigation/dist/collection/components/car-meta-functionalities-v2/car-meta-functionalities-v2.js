import { Component, Prop, h } from '@stencil/core';
import { analyticsSetupStore } from '../../state/analytics-setup-store';
import { ModelMetaClickEvent } from '../../services/datalayer/model-meta-click-event';
export class CarMetaFunctionalitiesV2 {
    constructor() {
        this.items = [
            { PhraseId: '', Text: '', Link: '' },
            { PhraseId: '', Text: '', Link: '' },
            { PhraseId: '', Text: '', Link: '' }
        ];
        this.modelMetaItems = [
            { PhraseId: '', Icon: '', Text: '', Link: '' },
            { PhraseId: '', Icon: '', Text: '', Link: '' },
            { PhraseId: '', Icon: '', Text: '', Link: '' }
        ];
        this.sendModelMetaFunctionAnalyticsEvent = (modelMetaItem) => {
            const analyticsSetup = {
                applicationId: analyticsSetupStore.get('applicationId'),
                locale: analyticsSetupStore.get('locale'),
                window: analyticsSetupStore.get('window'),
                environment: analyticsSetupStore.get('environment')
            };
            const modelMetaClickEvent = new ModelMetaClickEvent(analyticsSetup, this.name, modelMetaItem);
            const pagData = (window['pagData'] = window['pagData'] || []);
            pagData.push(modelMetaClickEvent.event());
        };
    }
    render() {
        return (h("div", { class: "car-meta-functionalities" },
            h("div", { class: "car-meta-functionalities-wrapper" }, this.modelMetaItems.map((item) => (h("phn-p-link-pure", { class: "car-meta-functionalities-item", size: "inherit", href: item.Link, icon: item.Icon, onClick: () => this.sendModelMetaFunctionAnalyticsEvent(item) }, item.Text))))));
    }
    static get is() { return "phn-car-meta-functionalities-v2"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["car-meta-functionalities-v2.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["car-meta-functionalities-v2.css"]
    }; }
    static get properties() { return {
        "name": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "name",
            "reflect": false
        },
        "items": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "ContentItem[]",
                "resolved": "ContentItem[]",
                "references": {
                    "ContentItem": {
                        "location": "import",
                        "path": "../../entities/item"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "defaultValue": "[\n    { PhraseId: '', Text: '', Link: '' },\n    { PhraseId: '', Text: '', Link: '' },\n    { PhraseId: '', Text: '', Link: '' }\n  ]"
        },
        "modelMetaItems": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "ModelMetaContentItem[]",
                "resolved": "ModelMetaContentItem[]",
                "references": {
                    "ModelMetaContentItem": {
                        "location": "import",
                        "path": "../../entities/item"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "defaultValue": "[\n    { PhraseId: '', Icon: '', Text: '', Link: '' },\n    { PhraseId: '', Icon: '', Text: '', Link: '' },\n    { PhraseId: '', Icon: '', Text: '', Link: '' }\n  ]"
        }
    }; }
}
