import { Component, h, Host, Listen, Prop, State } from '@stencil/core';
import { EMPTY_SERIES } from '../../utility/constants';
import { analyticsSetupStore } from '../../state/analytics-setup-store';
import { ModelRangeOverlayLoadEvent } from '../../services/datalayer/model-range-overlay-load-event';
import * as helper from '../../services/helper';
import { navContentStore } from '../../state/nav-content-store';
export class CarSeriesModelOverviewV2 {
    constructor() {
        this.isMobile = true;
        this.series = EMPTY_SERIES;
    }
    resizeHandler() {
        this.isDesktop = helper.isDesktop();
    }
    triggerDesktopAnalyticsEvent(event) {
        if (event.detail.includes(this.series.Name)) {
            const pagData = (window['pagData'] = window['pagData'] || []);
            const analyticsSetup = {
                applicationId: analyticsSetupStore.get('applicationId'),
                locale: analyticsSetupStore.get('locale'),
                window: analyticsSetupStore.get('window'),
                environment: analyticsSetupStore.get('environment')
            };
            const analyticsEvent = new ModelRangeOverlayLoadEvent(analyticsSetup, this.series.Name, this.series);
            pagData.push(analyticsEvent.event());
        }
    }
    componentWillLoad() {
        this.isDesktop = helper.isDesktop();
    }
    render() {
        return (h(Host, null,
            h("div", { class: this.isDesktop ? 'limit-stretch' : '' },
                h("phn-p-grid", { class: "car-series-model-overview" },
                    h("phn-p-grid-item", { size: "{base: 12, l:6}" },
                        h("phn-car-frontshot", { text: this.series.Name, image: this.series.Image })),
                    this.isMobile ? (h("phn-p-grid-item", { size: "12" },
                        h("phn-p-text", { class: "series-headline", size: "large", weight: "semibold" }, this.series.Name))) : null,
                    h("phn-p-grid-item", { size: "{base: 12, l:3}" },
                        h("phn-car-meta-functionalities-v2", { name: this.series.Name, items: this.series.Meta, modelMetaItems: this.series.ModelMeta })),
                    h("phn-p-grid-item", { size: "{base: 12, l:3}" },
                        h("phn-car-model-list-v2", { series: this.series })))),
            navContentStore.get('furtherLinks') ? h("phn-car-further-links-v2", null) : null));
    }
    static get is() { return "phn-car-series-model-overview-v2"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["car-series-model-overview-v2.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["car-series-model-overview-v2.css"]
    }; }
    static get properties() { return {
        "isMobile": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "is-mobile",
            "reflect": false,
            "defaultValue": "true"
        },
        "series": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "Series",
                "resolved": "Series",
                "references": {
                    "Series": {
                        "location": "import",
                        "path": "../../entities/series"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "defaultValue": "EMPTY_SERIES"
        }
    }; }
    static get states() { return {
        "isDesktop": {}
    }; }
    static get listeners() { return [{
            "name": "resize",
            "method": "resizeHandler",
            "target": "window",
            "capture": false,
            "passive": true
        }, {
            "name": "overlayEvent",
            "method": "triggerDesktopAnalyticsEvent",
            "target": "body",
            "capture": false,
            "passive": false
        }]; }
}
