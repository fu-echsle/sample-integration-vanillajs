import { Component, Prop, h } from '@stencil/core';
import { NavigationClickEvent } from '../../services/datalayer/navigation-click-event';
import { analyticsSetupStore } from '../../services/datalayer/analytics-setup-store';
export class CarFurtherLinks {
    constructor() {
        this.items = [
            { PhraseId: '', Text: '', Link: '' },
            { PhraseId: '', Text: '', Link: '' }
        ];
        this.sendNavigationClickAnalyticsEvent = (contentItem) => {
            const analyticsSetup = {
                applicationId: analyticsSetupStore.get('applicationId'),
                locale: analyticsSetupStore.get('locale'),
                window: analyticsSetupStore.get('window')
            };
            const navigationClick = new NavigationClickEvent(analyticsSetup, contentItem);
            const pagData = (window['pagData'] = window['pagData'] || []);
            pagData.push(navigationClick.event());
        };
    }
    renderItem(item) {
        return (h("p-link-pure", { href: item.Link, icon: 'arrow-head-right', size: "inherit", class: "car-further-links-item", onClick: () => this.sendNavigationClickAnalyticsEvent(item) }, item.Text));
    }
    render() {
        return (h("div", { class: "car-further-links" },
            h("div", { class: "car-further-links-wrapper" },
                this.renderItem(this.items[0]),
                this.renderItem(this.items[1]))));
    }
    static get is() { return "phn-car-further-links"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["car-further-links.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["car-further-links.css"]
    }; }
    static get properties() { return {
        "items": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "ContentItem[]",
                "resolved": "ContentItem[]",
                "references": {
                    "ContentItem": {
                        "location": "import",
                        "path": "../../services/state-tunnel"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "defaultValue": "[\n    { PhraseId: '', Text: '', Link: '' },\n    { PhraseId: '', Text: '', Link: '' }\n  ]"
        }
    }; }
}
