import { Component, Element, Method, Prop, h } from '@stencil/core';
import { ModelRangeClickEvent } from '../../services/datalayer/model-range-click-event';
import { DEFAULT_ENVIRONMENT, DEFAULT_SERIES_LIST, FEATURE_KEYBOARD } from '../../services/constants';
import { analyticsSetupStore } from '../../services/datalayer/analytics-setup-store';
import { isFeatureEnabled } from '../../env-config';
export class MobileCarSeriesList {
    constructor() {
        this.carSeries = DEFAULT_SERIES_LIST;
        this.env = DEFAULT_ENVIRONMENT;
        this.sendNavigationClickAnalyticsEvent = (series) => {
            const analyticsSetup = {
                applicationId: analyticsSetupStore.get('applicationId'),
                locale: analyticsSetupStore.get('locale'),
                window: analyticsSetupStore.get('window'),
                environment: analyticsSetupStore.get('environment')
            };
            const modelSeriesClickEvent = new ModelRangeClickEvent(analyticsSetup, series.Name, series);
            const pagData = (window['pagData'] = window['pagData'] || []);
            pagData.push(modelSeriesClickEvent.event());
        };
        this.showCarSubnavigation = (index) => {
            this.sendNavigationClickAnalyticsEvent(this.carSeries[index]);
            const subnavigation = this.el.querySelector('.drawer-car-series-model-overview-' + index);
            subnavigation.style.display = 'block';
            this.setActiveDrawer(subnavigation, 2);
        };
        this.handlePressEnterKey = (event, index) => {
            if (isFeatureEnabled(FEATURE_KEYBOARD, this.env)) {
                if (event.key === 'Enter') {
                    this.showCarSubnavigation(index);
                }
            }
        };
    }
    async hideAll() {
        this.hideAllCarSubnavigations();
    }
    componentDidLoad() {
        this.hideAllCarSubnavigations();
    }
    hideAllCarSubnavigations() {
        this.carSeries.map((_, index) => {
            const subnavigation = this.el.querySelector('.drawer-car-series-model-overview-' + index);
            subnavigation.style.display = 'none';
        });
    }
    render() {
        return (h("div", { class: "mobile-car-series-list" }, this.carSeries.map((series, index) => (h("div", { class: "mobile-car-series" },
            h("phn-car-series", { class: 'car-series car-series-' + index, text: series.Name, image: series.Image, tabindex: "0", onClick: () => this.showCarSubnavigation(index), onKeyDown: (event) => this.handlePressEnterKey(event, index) }),
            h("phn-drawer-car-series-model-overview", { series: series, class: 'drawer-car-series-model-overview drawer-car-series-model-overview-' + index, closeActiveDrawer: this.closeActiveDrawer }))))));
    }
    static get is() { return "phn-mobile-car-series-list"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["mobile-car-series-list.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["mobile-car-series-list.css"]
    }; }
    static get properties() { return {
        "carSeries": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "Series[]",
                "resolved": "Series[]",
                "references": {
                    "Series": {
                        "location": "import",
                        "path": "../entities/series"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "defaultValue": "DEFAULT_SERIES_LIST"
        },
        "setActiveDrawer": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "(el: HTMLElement, level: number) => void",
                "resolved": "(el: HTMLElement, level: number) => void",
                "references": {
                    "HTMLElement": {
                        "location": "global"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "closeActiveDrawer": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "(level: number) => void",
                "resolved": "(level: number) => void",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "env": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "env",
            "reflect": false,
            "defaultValue": "DEFAULT_ENVIRONMENT"
        }
    }; }
    static get methods() { return {
        "hideAll": {
            "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                    "Promise": {
                        "location": "global"
                    }
                },
                "return": "Promise<void>"
            },
            "docs": {
                "text": "",
                "tags": []
            }
        }
    }; }
    static get elementRef() { return "el"; }
}
