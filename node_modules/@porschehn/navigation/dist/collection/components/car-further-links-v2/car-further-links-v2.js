import { Component, h, Listen, State } from '@stencil/core';
import { NavigationClickEvent } from '../../services/datalayer/navigation-click-event';
import { analyticsSetupStore } from '../../state/analytics-setup-store';
import { navContentStore } from '../../state/nav-content-store';
import * as helper from '../../services/helper';
export class CarFurtherLinksV2 {
    constructor() {
        this.furtherLinks = navContentStore.get('furtherLinks');
        this.sendNavigationClickAnalyticsEvent = (contentItem) => {
            const analyticsSetup = {
                applicationId: analyticsSetupStore.get('applicationId'),
                locale: analyticsSetupStore.get('locale'),
                window: analyticsSetupStore.get('window'),
                environment: analyticsSetupStore.get('environment')
            };
            const navigationClick = new NavigationClickEvent(analyticsSetup, contentItem);
            const pagData = (window['pagData'] = window['pagData'] || []);
            pagData.push(navigationClick.event());
        };
    }
    resizeHandler() {
        this.isDesktop = helper.isDesktop();
    }
    componentWillLoad() {
        this.isDesktop = helper.isDesktop();
    }
    render() {
        return (h("div", { class: "car-further-links" },
            h("div", { class: this.isDesktop ? 'limit-stretch' : '' },
                h("phn-p-grid", { direction: "row-reverse" },
                    h("phn-p-grid-item", { size: "{base: 12, l:3}" },
                        h("phn-p-link-pure", { href: this.furtherLinks.Link, icon: 'arrow-head-right', size: "inherit", class: "car-further-links-item", onClick: () => this.sendNavigationClickAnalyticsEvent(this.furtherLinks) }, this.furtherLinks.Text))))));
    }
    static get is() { return "phn-car-further-links-v2"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["car-further-links-v2.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["car-further-links-v2.css"]
    }; }
    static get states() { return {
        "isDesktop": {}
    }; }
    static get listeners() { return [{
            "name": "resize",
            "method": "resizeHandler",
            "target": "window",
            "capture": false,
            "passive": true
        }]; }
}
