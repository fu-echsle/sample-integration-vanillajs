import { Component, Element, Listen, Prop, h } from '@stencil/core';
import { EMPTY_ITEM, DEFAULT_ENVIRONMENT, MENU_PHRASE_ID, PHRASEID_FIELD_NAME, TEXT_FIELD_NAME, FEATURE_KEYBOARD } from '../../services/constants';
import { isFeatureEnabled } from '../../env-config';
import { navContentStore } from '../../services/nav-content-store';
export class DrawerShopsAndMore {
    constructor() {
        this.env = DEFAULT_ENVIRONMENT;
        this.item = EMPTY_ITEM;
        this.backButtonText = '';
        this.backButtonId = '';
        this.level = 2;
        this.showDrawer = (item, innerOverlayEl) => {
            if (!item.Link && innerOverlayEl) {
                innerOverlayEl.style.display = 'block';
                this.setActiveDrawer(innerOverlayEl, this.level + 1);
            }
        };
        this.handleKeyDown = (event, item, innerOverlayEl, isLastItem) => {
            if (isFeatureEnabled(FEATURE_KEYBOARD, this.env)) {
                if (event.key === 'Enter') {
                    this.showDrawer(item, innerOverlayEl);
                }
                if (!event.shiftKey && event.key === 'Tab' && isLastItem) {
                    event.preventDefault();
                    const target = event.target;
                    const closestBackButton = target
                        .closest('phn-drawer-shops-and-more')
                        .querySelector('phn-back-button > p-button-pure');
                    closestBackButton.focus();
                }
            }
        };
    }
    hideDrawer() {
        this.hide();
        this.closeActiveDrawer(this.level);
    }
    hide() {
        this.mainEl.style.display = 'none';
    }
    getValueForField(fieldName) {
        let text = '';
        const menu = navContentStore.get('menu');
        if (menu && menu.length > 0) {
            const menuItem = menu.find((m) => m.PhraseId === MENU_PHRASE_ID);
            if (menuItem && menuItem[fieldName]) {
                text = menuItem[fieldName];
            }
        }
        return text;
    }
    render() {
        this.hide();
        const buttonText = this.backButtonText ? this.backButtonText : this.getValueForField(TEXT_FIELD_NAME);
        const buttonId = this.backButtonId ? this.backButtonId : this.getValueForField(PHRASEID_FIELD_NAME);
        const _headline = this.headline !== '' ? this.headline : this.item.Text;
        return (h("div", { class: `drawer-shops-and-more drawer-level-${this.level}-item-scroll drawer-level-${this.level}-item` },
            h("div", { class: "drawer-container" },
                h("div", { class: "drawer-back-and-close" },
                    h("phn-back-button", { class: "back-button", onClick: () => this.hideDrawer(), buttonId: buttonId, text: buttonText }),
                    h("phn-close-button", { class: "close-button" })),
                h("phn-headline", { text: _headline, class: "drawer-headline" }),
                this.item.Items &&
                    this.item.Items.map((item, index, arr) => {
                        const isLastItem = arr.length === index + 1;
                        let innerOverlayEl;
                        return (h("div", null,
                            h("phn-list-item", { item: item, onClick: () => this.showDrawer(item, innerOverlayEl), onKeyDown: (event) => this.handleKeyDown(event, item, innerOverlayEl, isLastItem), class: 'shops-and-more-item shops-and-more-item-' + index }),
                            item.Link || !item.Items ? null : (h("phn-drawer-shops-and-more", { headline: item.Text, ref: (el) => (innerOverlayEl = el), item: item, level: this.level + 1, class: 'drawer-level-2 drawer-level-2-' + index, backButtonText: this.item.Text, backButtonId: this.item.PhraseId, closeActiveDrawer: this.closeActiveDrawer, setActiveDrawer: this.setActiveDrawer }))));
                    }))));
    }
    static get is() { return "phn-drawer-shops-and-more"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["drawer-shops-and-more.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["drawer-shops-and-more.css"]
    }; }
    static get properties() { return {
        "env": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "env",
            "reflect": false,
            "defaultValue": "DEFAULT_ENVIRONMENT"
        },
        "item": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "ContentItem",
                "resolved": "ContentItem",
                "references": {
                    "ContentItem": {
                        "location": "import",
                        "path": "../entities/item"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "defaultValue": "EMPTY_ITEM"
        },
        "backButtonText": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "back-button-text",
            "reflect": false,
            "defaultValue": "''"
        },
        "backButtonId": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "back-button-id",
            "reflect": false,
            "defaultValue": "''"
        },
        "headline": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "headline",
            "reflect": false
        },
        "level": {
            "type": "number",
            "mutable": false,
            "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "level",
            "reflect": false,
            "defaultValue": "2"
        },
        "setActiveDrawer": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "(el: HTMLElement, level: number) => void",
                "resolved": "(el: HTMLElement, level: number) => void",
                "references": {
                    "HTMLElement": {
                        "location": "global"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "closeActiveDrawer": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "(level: number) => void",
                "resolved": "(level: number) => void",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        }
    }; }
    static get elementRef() { return "mainEl"; }
    static get listeners() { return [{
            "name": "closeEvent",
            "method": "hide",
            "target": undefined,
            "capture": false,
            "passive": false
        }]; }
}
