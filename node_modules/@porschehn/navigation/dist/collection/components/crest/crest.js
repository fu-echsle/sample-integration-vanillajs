import { Component, h, Prop } from '@stencil/core';
import { CrestClickEvent } from '../../services/datalayer/crest-click-event';
import { analyticsSetupStore } from '../../services/datalayer/analytics-setup-store';
import StateTunnel from '../../services/state-tunnel';
import { CREST_PHRASE_ID } from '../../services/constants';
export class Crest {
    getCrestLink() {
        const crestItem = this.menu.find((m) => m.PhraseId === CREST_PHRASE_ID);
        return crestItem ? (crestItem.Link ? crestItem.Link : '/') : '/';
    }
    sendCrestClickAnalyticsEvent() {
        const analyticsSetup = {
            applicationId: analyticsSetupStore.get('applicationId'),
            locale: analyticsSetupStore.get('locale'),
            window: analyticsSetupStore.get('window')
        };
        const crestClickEvent = new CrestClickEvent(analyticsSetup);
        const pagData = (window['pagData'] = window['pagData'] || []);
        pagData.push(crestClickEvent.event());
    }
    render() {
        return (h("a", { class: "crest", onClick: () => this.sendCrestClickAnalyticsEvent(), href: this.getCrestLink() },
            h("p-marque", { class: "marque" })));
    }
    static get is() { return "phn-crest"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["crest.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["crest.css"]
    }; }
    static get properties() { return {
        "menu": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "ContentItem[]",
                "resolved": "ContentItem[]",
                "references": {
                    "ContentItem": {
                        "location": "import",
                        "path": "../../services/state-tunnel"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        }
    }; }
}
StateTunnel.injectProps(Crest, ['menu']);
