import { Component, Element, Host, Prop, h } from '@stencil/core';
import { navStateStore } from '../../state/nav-state-store';
import { MAX_M_VIEWPORT_WIDTH } from '../../utility/constants';
import { getSrcPath } from '../../services/get-source-path';
export class CarSeries {
    constructor() {
        this.imgLarge = new Image();
        this.isResized = false;
        this.hideImage = (image) => {
            image.style.display = 'none';
        };
        this.setImageDefaultDisplay = (image) => {
            image.style.display = '';
        };
    }
    prependImage() {
        this.imgLarge.srcset = getSrcPath(this.image);
        this.imgLarge.alt = this.text;
        this.el.prepend(this.imgLarge);
        window.addEventListener('resize', () => {
            this.isResized = true;
            this.imgLarge.srcset = getSrcPath(this.image);
        });
    }
    componentWillLoad() {
        if (window.innerWidth <= MAX_M_VIEWPORT_WIDTH) {
            navStateStore.set('imagesLoaded', true);
            this.setImageDefaultDisplay(this.imgLarge);
            this.prependImage();
        }
        else {
            navStateStore.set('imagesRegistered', navStateStore.get('imagesRegistered') + 1);
            this.imgLarge.onload = () => {
                if (!this.isResized)
                    navStateStore.set('imagesRetrieved', navStateStore.get('imagesRetrieved') + 1);
            };
            this.hideImage(this.imgLarge);
            this.prependImage();
        }
    }
    componentDidUpdate() {
        if (navStateStore.get('navigationLoaded')) {
            if (window.innerWidth > MAX_M_VIEWPORT_WIDTH) {
                this.setImageDefaultDisplay(this.imgLarge);
            }
        }
    }
    render() {
        const hiddenStyle = { display: 'none' };
        return (h(Host, { class: "car-series" },
            h("p", { style: navStateStore.get('navigationLoaded') ? {} : hiddenStyle, class: "car-series-text", "aria-label": `Porsche Model Series ${this.text}` }, this.text),
            h("div", { style: navStateStore.get('navigationLoaded') ? hiddenStyle : {}, class: "car-series-skeleton" })));
    }
    static get is() { return "phn-car-series"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["car-series.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["car-series.css"]
    }; }
    static get assetsDirs() { return ["series-assets"]; }
    static get properties() { return {
        "text": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "text",
            "reflect": false
        },
        "image": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "image",
            "reflect": false
        }
    }; }
    static get elementRef() { return "el"; }
}
