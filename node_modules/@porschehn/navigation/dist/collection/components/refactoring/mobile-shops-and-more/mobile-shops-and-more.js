import { Component, Host, h } from '@stencil/core';
import { navContentStore } from '../../../services/nav-content-store';
import { navStateStore } from '../../../services/nav-state-store';
import { isFeatureEnabled } from '../../../env-config';
import { FEATURE_KEYBOARD } from '../../../services/constants';
import { analyticsSetupStore } from '../../../services/datalayer/analytics-setup-store';
import { NavigationClickEvent } from '../../../services/datalayer/navigation-click-event';
export class MobileShopsAndMore {
    constructor() {
        this.handleKeyDown = (event, item, index) => {
            if (isFeatureEnabled(FEATURE_KEYBOARD, navContentStore.get('env'))) {
                if (event.key === 'Enter') {
                    this.showDrawer(event, item, index);
                }
            }
        };
    }
    showDrawer(_, item, index) {
        const phnDrawerShopsAndMore2 = (h("phn-drawer-shops-and-more-2", { headline: item.Text, item: item.Items && item.Items.length === 1 ? item.Items[0] : item, slot: "content", class: "shops-and-more-drawer-level-1" }));
        const parent = navStateStore.get('activeDrawerContent');
        const currentParent = navStateStore.get('parentDrawerContent');
        navStateStore.set('activeDrawerContent', phnDrawerShopsAndMore2);
        navStateStore.set('parentDrawerContent', [parent, ...currentParent]);
        navStateStore.set('accessibilityMarker', `.shops-and-more-item-${index}`);
        navStateStore.set('backButtonText', null);
        this.sendNavigationClickAnalyticsEvent(item);
    }
    sendNavigationClickAnalyticsEvent(item) {
        const contentItem = { PhraseId: item.PhraseId, Text: item.Text, Link: undefined };
        const analyticsSetup = {
            applicationId: analyticsSetupStore.get('applicationId'),
            locale: analyticsSetupStore.get('locale'),
            window: analyticsSetupStore.get('window'),
            environment: analyticsSetupStore.get('environment')
        };
        const navigationClickEvent = new NavigationClickEvent(analyticsSetup, contentItem);
        const pagData = (window['pagData'] = window['pagData'] || []);
        pagData.push(navigationClickEvent.event());
    }
    getItems() {
        const items = [];
        const shops = navContentStore.get('shops');
        const more = navContentStore.get('more');
        if (shops && shops.length > 0) {
            items.push(shops[0]);
        }
        if (more && more.length > 0) {
            items.push(more[0]);
        }
        return items;
    }
    render() {
        const items = this.getItems();
        return (h(Host, { class: "mobile-shops-and-more" }, items.map((item, index) => {
            return (h("div", { class: "shops-and-more-container" },
                h("phn-shops-and-more-item", { item: item, class: 'shops-and-more-item shops-and-more-item-' + index, tabindex: "0", onClick: (event) => this.showDrawer(event, item, index), onKeyDown: (event) => this.handleKeyDown(event, item, index) })));
        })));
    }
    static get is() { return "phn-mobile-shops-and-more-2"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["mobile-shops-and-more.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["mobile-shops-and-more.css"]
    }; }
}
