import { Component, Event, h, Host } from '@stencil/core';
import { navStateStore } from '../../../services/nav-state-store';
import { isFeatureEnabled } from '../../../env-config';
import { FEATURE_KEYBOARD } from '../../../services/constants';
import { navContentStore } from '../../../services/nav-content-store';
export class MobileLayout {
    constructor() {
        this.keyDownHandler = (event) => {
            if (isFeatureEnabled(FEATURE_KEYBOARD, navContentStore.get('env'))) {
                if (event.key === 'Enter') {
                    this.showDrawer(event);
                }
            }
        };
    }
    showDrawer(event) {
        navStateStore.set('activeDrawerContent', h("phn-menu-mobile-level-1", { slot: "content" }));
        const hostElement = event.target.closest('phn-mobile-layout');
        const menuDrawer = hostElement.querySelector('.drawer-trigger');
        menuDrawer.showContent(menuDrawer);
    }
    render() {
        return (h(Host, null,
            h("phn-burger-button", { tabindex: "0", class: "burger-button", onClick: this.showDrawer, onKeyDown: this.keyDownHandler }),
            h("phn-menu-drawer", null, navStateStore.get('activeDrawerContent'))));
    }
    static get is() { return "phn-mobile-layout"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["mobile-layout.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["mobile-layout.css"]
    }; }
    static get events() { return [{
            "method": "slotUpdated",
            "name": "slotUpdated",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }]; }
}
