import { Component, h, Host, Listen, Element } from '@stencil/core';
import { navStateStore } from '../../state/nav-state-store';
import { BodyScrollLock } from '../../services/body-scroll-lock';
import { MenuDrawerAnimation } from '../../services/menu-drawer-animation';
export class MobileLayout {
    constructor() {
        this.bodyScrollLock = new BodyScrollLock();
        this.menuDrawerAnimation = new MenuDrawerAnimation();
    }
    handleKeyDown(ev) {
        if (navStateStore.get('isDrawerOpen') === true && ev.key === 'Escape') {
            this.handleCloseAllDrawers();
        }
    }
    handleMenuOverlayOpen() {
        this.bodyScrollLock.activate();
        navStateStore.set('isDrawerOpen', true);
    }
    handleMenuOverlayClose() {
        this.bodyScrollLock.deactivate();
    }
    handleCloseAllDrawers() {
        const resetDrawerStates = () => {
            navStateStore.set('drawerContentStack', []);
        };
        navStateStore.set('isDrawerOpen', false);
        this.menuDrawerAnimation.slideOutAllMenuDrawers(this.mobileLayoutElement, resetDrawerStates);
        this.bodyScrollLock.deactivate();
    }
    showMobileLevel1() {
        const drawer = { content: h("phn-menu-mobile-level-1", { slot: "content" }) };
        navStateStore.set('drawerContentStack', [drawer]);
    }
    render() {
        return (h(Host, null,
            h("phn-burger-button", { class: "burger-button", onClick: this.showMobileLevel1 }),
            navStateStore.get('drawerContentStack').map((drawer, index, array) => {
                const isTopmostDrawer = array.length - 1 === index;
                return (h("phn-menu-drawer", { key: index, backButton: drawer.backButton, mobileLayout: this.mobileLayoutElement, isTopmostDrawer: isTopmostDrawer ? 'true' : '' }, drawer.content));
            })));
    }
    static get is() { return "phn-mobile-layout"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["mobile-layout.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["mobile-layout.css"]
    }; }
    static get elementRef() { return "mobileLayoutElement"; }
    static get listeners() { return [{
            "name": "keydown",
            "method": "handleKeyDown",
            "target": undefined,
            "capture": false,
            "passive": false
        }, {
            "name": "menuOverlayOpen",
            "method": "handleMenuOverlayOpen",
            "target": undefined,
            "capture": false,
            "passive": false
        }, {
            "name": "menuOverlayClose",
            "method": "handleMenuOverlayClose",
            "target": undefined,
            "capture": false,
            "passive": false
        }, {
            "name": "closeAllDrawers",
            "method": "handleCloseAllDrawers",
            "target": undefined,
            "capture": false,
            "passive": false
        }]; }
}
