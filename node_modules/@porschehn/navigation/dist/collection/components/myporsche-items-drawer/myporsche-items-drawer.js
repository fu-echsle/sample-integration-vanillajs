import { Component, Element, Host, Listen, Prop, h } from '@stencil/core';
import { MENU_PHRASE_ID, PHRASEID_FIELD_NAME, TEXT_FIELD_NAME, FEATURE_KEYBOARD, FOCUSABLE_ELEMENTS_SELECTOR } from '../../services/constants';
import { isFeatureEnabled } from '../../env-config';
import { navContentStore } from '../../services/nav-content-store';
export class MyPorscheItemsDrawer {
    hideDrawer() {
        this.hostElement.style.display = 'none';
    }
    keyDownHandler(event) {
        if (isFeatureEnabled(FEATURE_KEYBOARD, navContentStore.get('env'))) {
            if (!event.shiftKey && event.key === 'Tab') {
                const focusable = this.hostElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);
                if (event.target === focusable[focusable.length - 1]) {
                    event.preventDefault();
                    this.hostElement.querySelector('phn-back-button > p-button-pure').focus();
                }
            }
        }
    }
    getValueForField(fieldName) {
        let text = '';
        const menu = navContentStore.get('menu');
        if (menu && menu.length > 0) {
            const menuItem = menu.find((m) => m.PhraseId === MENU_PHRASE_ID);
            if (menuItem && menuItem[fieldName]) {
                text = menuItem[fieldName];
            }
        }
        return text;
    }
    hide() {
        this.hideDrawer();
        this.closeActiveDrawer(2);
    }
    render() {
        return (h(Host, { class: "drawer-level-2-item-scroll" },
            h("div", { class: "drawer-container" },
                h("div", { class: "drawer-back-and-close" },
                    h("phn-back-button", { class: "back-button", buttonId: this.getValueForField(PHRASEID_FIELD_NAME), text: this.getValueForField(TEXT_FIELD_NAME), onClick: () => this.hide() }),
                    h("phn-close-button", { class: "close-button" })),
                h("phn-headline", { text: "My Porsche", class: "drawer-headline" }),
                h("phn-myporsche-items", null))));
    }
    static get is() { return "phn-myporsche-items-drawer"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["myporsche-items-drawer.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["myporsche-items-drawer.css"]
    }; }
    static get properties() { return {
        "closeActiveDrawer": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "(level: number) => void",
                "resolved": "(level: number) => void",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        }
    }; }
    static get elementRef() { return "hostElement"; }
    static get listeners() { return [{
            "name": "closeEvent",
            "method": "hideDrawer",
            "target": undefined,
            "capture": false,
            "passive": false
        }, {
            "name": "keydown",
            "method": "keyDownHandler",
            "target": undefined,
            "capture": false,
            "passive": false
        }]; }
}
