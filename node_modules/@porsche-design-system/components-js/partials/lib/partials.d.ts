declare type Cdn = 'auto' | 'cn';
declare type FontFaceStylesheetOptions = {
    cdn?: Cdn;
    withoutTags?: boolean;
};
export declare const getFontFaceStylesheet: (opts?: FontFaceStylesheetOptions) => string;
declare type InitialStylesOptions = {
    prefix?: string;
    withoutTags?: boolean;
};
export declare const getInitialStyles: (opts?: InitialStylesOptions) => string;
declare type FontSubset = 'latin' | 'greek' | 'cyril';
declare type FontWeight = 'thin' | 'regular' | 'semi-bold' | 'bold';
declare type FontPreloadLinkOptions = {
    subset?: FontSubset;
    weights?: FontWeight[];
    cdn?: Cdn;
    withoutTags?: boolean;
};
declare type FontPreloadLinkOptionsWithTags = FontPreloadLinkOptions & {
    withoutTags?: false;
};
declare type FontPreloadLinkOptionsWithoutTags = FontPreloadLinkOptions & {
    withoutTags?: true;
};
export declare function getFontLinks(opts?: FontPreloadLinkOptionsWithTags): string;
export declare function getFontLinks(opts?: FontPreloadLinkOptionsWithoutTags): string[];
declare type ComponentChunkName = 'banner' | 'button-group' | 'button-pure' | 'button' | 'checkbox-wrapper' | 'content-wrapper' | 'divider' | 'fieldset-wrapper' | 'flex' | 'grid' | 'headline' | 'icon' | 'link-pure' | 'link-social' | 'link' | 'marque' | 'modal' | 'pagination' | 'radio-button-wrapper' | 'select-wrapper' | 'spinner' | 'switch' | 'tabs-bar' | 'tabs' | 'text-field-wrapper' | 'text-list' | 'text' | 'textarea-wrapper';
declare type ComponentChunkLinksOptions = {
    components?: ComponentChunkName[];
    cdn?: Cdn;
    withoutTags?: boolean;
};
declare type ComponentChunkLinksOptionsWithTags = ComponentChunkLinksOptions & {
    withoutTags?: false;
};
declare type ComponentChunkLinksOptionsWithoutTags = ComponentChunkLinksOptions & {
    withoutTags?: true;
};
export declare function getComponentChunkLinks(opts?: ComponentChunkLinksOptionsWithTags): string;
export declare function getComponentChunkLinks(opts?: ComponentChunkLinksOptionsWithoutTags): string[];
declare type MetaIconsOptions = {
    appTitle: string;
    cdn?: Cdn;
};
export declare function getMetaTagsAndIconLinks(opts?: MetaIconsOptions): string;
declare type IconNameCamelCase = '360' | 'activeCabinVentilation' | 'add' | 'adjust' | 'arrowDoubleDown' | 'arrowDoubleLeft' | 'arrowDoubleRight' | 'arrowDoubleUp' | 'arrowDown' | 'arrowFirst' | 'arrowHeadDown' | 'arrowHeadLeft' | 'arrowHeadRight' | 'arrowHeadUp' | 'arrowLast' | 'arrowLeft' | 'arrowRight' | 'arrowUp' | 'augmentedReality' | 'batteryEmpty' | 'batteryFull' | 'bell' | 'bookmark' | 'broadcast' | 'calculator' | 'calendar' | 'camera' | 'car' | 'carBattery' | 'card' | 'chargingActive' | 'chargingState' | 'chargingStation' | 'chart' | 'chat' | 'check' | 'city' | 'climate' | 'climateControl' | 'clock' | 'close' | 'closedCaption' | 'co2Emission' | 'compare' | 'configurate' | 'countryRoad' | 'cubicCapacity' | 'delete' | 'disable' | 'document' | 'download' | 'duration' | 'edit' | 'email' | 'exclamation' | 'external' | 'filter' | 'flash' | 'fuelStation' | 'garage' | 'gift' | 'globe' | 'grid' | 'highway' | 'home' | 'horn' | 'image' | 'increase' | 'information' | 'key' | 'leaf' | 'leather' | 'light' | 'list' | 'locate' | 'lock' | 'lockOpen' | 'logoBaidu' | 'logoDelicious' | 'logoDigg' | 'logoFacebook' | 'logoFoursquare' | 'logoGmail' | 'logoGoogle' | 'logoHatena' | 'logoInstagram' | 'logoKaixin' | 'logoLinkedin' | 'logoPinterest' | 'logoQq' | 'logoQqShare' | 'logoSkyrock' | 'logoSohu' | 'logoTecent' | 'logoTelegram' | 'logoTumblr' | 'logoTwitter' | 'logoViber' | 'logoVk' | 'logoWechat' | 'logoWeibo' | 'logoWhatsapp' | 'logoXing' | 'logoYahoo' | 'logoYouku' | 'logoYoutube' | 'logout' | 'map' | 'menuDotsHorizontal' | 'menuDotsVertical' | 'menuLines' | 'minus' | 'mobile' | 'moon' | 'oilCan' | 'parkingBrake' | 'parkingLight' | 'pause' | 'phone' | 'pin' | 'play' | 'plug' | 'plus' | 'preheating' | 'printer' | 'purchase' | 'question' | 'racingFlag' | 'refresh' | 'replay' | 'reset' | 'route' | 'rss' | 'save' | 'screen' | 'search' | 'send' | 'share' | 'shoppingBag' | 'shoppingCart' | 'sidelights' | 'snowflake' | 'sort' | 'stack' | 'star' | 'steeringWheel' | 'stopwatch' | 'subtract' | 'sun' | 'switch' | 'tablet' | 'tachometer' | 'truck' | 'upload' | 'user' | 'userGroup' | 'userManual' | 'video' | 'view' | 'viewOff' | 'volumeOff' | 'volumeUp' | 'warning' | 'weight' | 'wifi' | 'work' | 'wrench' | 'wrenches' | 'zoomIn' | 'zoomOut';
declare type IconLinksOptions = {
    icons?: IconNameCamelCase[];
    cdn?: Cdn;
    withoutTags?: boolean;
};
declare type IconLinksOptionsWithTags = IconLinksOptions & {
    withoutTags?: false;
};
declare type IconLinksOptionsWithoutTags = IconLinksOptions & {
    withoutTags?: true;
};
export declare function getIconLinks(opts?: IconLinksOptionsWithTags): string;
export declare function getIconLinks(opts?: IconLinksOptionsWithoutTags): string[];
export {};
