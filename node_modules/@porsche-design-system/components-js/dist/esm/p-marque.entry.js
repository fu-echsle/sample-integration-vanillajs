import { r as registerInstance, c as prefix, h } from './breakpointCustomizable-f03211e4.js';
import { c as classnames } from './index-359f03c5.js';
import { M as MARQUES_CDN_BASE_URL, a as MARQUES_MANIFEST$1 } from './index-9849e1be.js';

const marqueCss = ":host{display:-ms-inline-flexbox;display:inline-flex;vertical-align:top}.p-marque{display:block;width:100px;height:60px}@media (min-width: 1300px){.p-marque{width:120px;height:72px}}.p-marque>img{display:block;width:100%;height:auto}";

class Marque {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        /**
         * Show/hide trademark sign.
         */
        this.trademark = true;
    }
    render() {
        const cdnBaseUrl =  MARQUES_CDN_BASE_URL ;
        const manifestPath = MARQUES_MANIFEST$1[`porscheMarque${this.trademark ? 'Trademark' : ''}`];
        const buildSrcSet = (size) => Object.entries(manifestPath[size])
            .map(([resolution, fileName]) => `${cdnBaseUrl}/${fileName} ${resolution}`)
            .join(',');
        const marqueClasses = classnames(prefix('marque'));
        return (h("picture", { class: marqueClasses }, h("source", { srcSet: buildSrcSet('medium'), media: "(min-width: 1300px)" }), h("source", { srcSet: buildSrcSet('small') }), h("img", { src: `${cdnBaseUrl}/${manifestPath.medium['2x']}`, alt: "Porsche" })));
    }
}
Marque.style = marqueCss;

export { Marque as p_marque };
