/* Internal functions, - interface or output might change in future releases! */
/**
 * Converts px to rem unit
 * @param $px - only accepts value in px unit, e.g. 12px
 */
/**
 * Converts rem to px unit
 * @param $rem - only accepts value in rem unit, e.g. 1.5rem
 */
/* Internal functions, - interface or output might change in future releases! */
/**
 * Converts px to rem unit
 * @param $px - only accepts value in px unit, e.g. 12px
 */
/**
 * Converts rem to px unit
 * @param $rem - only accepts value in rem unit, e.g. 1.5rem
 */
/* Internal functions, - interface or output might change in future releases! */
/**
 * Converts font-size to rem.
 * @param $font-size - only accepts value in rem or px, e.g. 12px or 1.5rem
 */
/**
 * Calculates line-height depending on font-size that fits into Porsche Vertical Grid System
 * @param $font-size - only accepts value in rem or px, e.g. 12px or 1.5rem
 */
/* Internal functions, - interface or output might change in future releases! */
/**
 * Theme light
 */
/**
 * Theme dark
 */
/**
 * External brand colors
 */
/* Internal functions, - interface or output might change in future releases! */
/**
 * Converts px to rem unit
 * @param $px - only accepts value in px unit, e.g. 12px
 */
/**
 * Converts rem to px unit
 * @param $rem - only accepts value in rem unit, e.g. 1.5rem
 */
/* Internal functions, - interface or output might change in future releases! */
/**
 * Converts px to rem unit
 * @param $px - only accepts value in px unit, e.g. 12px
 */
/**
 * Converts rem to px unit
 * @param $rem - only accepts value in rem unit, e.g. 1.5rem
 */
/* Internal functions, - interface or output might change in future releases! */
/**
 * Converts px to rem unit
 * @param $px - only accepts value in px unit, e.g. 12px
 */
/**
 * Converts rem to px unit
 * @param $rem - only accepts value in rem unit, e.g. 1.5rem
 */
/* Internal functions, - interface or output might change in future releases! */
/**
 * Converts px to rem unit
 * @param $px - only accepts value in px unit, e.g. 12px
 */
/**
 * Converts rem to px unit
 * @param $rem - only accepts value in rem unit, e.g. 1.5rem
 */
/* Internal functions, - interface or output might change in future releases! */
/**
 * Converts font-size to rem.
 * @param $font-size - only accepts value in rem or px, e.g. 12px or 1.5rem
 */
/**
 * Calculates line-height depending on font-size that fits into Porsche Vertical Grid System
 * @param $font-size - only accepts value in rem or px, e.g. 12px or 1.5rem
 */
/* Internal functions, - interface or output might change in future releases! */
/**
 * Calculates font-size and line-height to fit into Porsche Vertical Grid System
 * @param $size - only accepts value in rem or px, e.g. 12px or 1.5rem
 */
/**
 * Theme light
 */
/**
 * Theme dark
 */
/**
 * External brand colors
 */
/* Internal functions, - interface or output might change in future releases! */
/**
 * Converts px to rem unit
 * @param $px - only accepts value in px unit, e.g. 12px
 */
/**
 * Converts rem to px unit
 * @param $rem - only accepts value in rem unit, e.g. 1.5rem
 */
/* Internal functions, - interface or output might change in future releases! */
/**
 * Converts px to rem unit
 * @param $px - only accepts value in px unit, e.g. 12px
 */
/**
 * Converts rem to px unit
 * @param $rem - only accepts value in rem unit, e.g. 1.5rem
 */
:host {
  display: inline-flex;
  vertical-align: top;
}

.p-spinner {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  display: block;
  stroke-width: 1px;
  -webkit-animation: rotate 1s linear infinite;
          animation: rotate 1s linear infinite;
  -webkit-animation-duration: var(--p-animation-duration__spinner, 2s);
          animation-duration: var(--p-animation-duration__spinner, 2s);
}
.p-spinner--theme-light .p-spinner__fg,
.p-spinner--theme-light .p-spinner__bg {
  stroke: #323639;
}
.p-spinner--theme-dark .p-spinner__fg,
.p-spinner--theme-dark .p-spinner__bg {
  stroke: #fff;
}
.p-spinner--size-small {
  width: 3rem;
  height: 3rem;
}
.p-spinner--size-medium {
  width: 4.5rem;
  height: 4.5rem;
}
.p-spinner--size-large {
  width: 6.5rem;
  height: 6.5rem;
}
.p-spinner--size-inherit {
  width: inherit;
  height: inherit;
}
@media (min-width: 480px) {
  .p-spinner--size-small-xs {
    width: 3rem;
    height: 3rem;
  }
  .p-spinner--size-medium-xs {
    width: 4.5rem;
    height: 4.5rem;
  }
  .p-spinner--size-large-xs {
    width: 6.5rem;
    height: 6.5rem;
  }
  .p-spinner--size-inherit-xs {
    width: inherit;
    height: inherit;
  }
}
@media (min-width: 760px) {
  .p-spinner--size-small-s {
    width: 3rem;
    height: 3rem;
  }
  .p-spinner--size-medium-s {
    width: 4.5rem;
    height: 4.5rem;
  }
  .p-spinner--size-large-s {
    width: 6.5rem;
    height: 6.5rem;
  }
  .p-spinner--size-inherit-s {
    width: inherit;
    height: inherit;
  }
}
@media (min-width: 1000px) {
  .p-spinner--size-small-m {
    width: 3rem;
    height: 3rem;
  }
  .p-spinner--size-medium-m {
    width: 4.5rem;
    height: 4.5rem;
  }
  .p-spinner--size-large-m {
    width: 6.5rem;
    height: 6.5rem;
  }
  .p-spinner--size-inherit-m {
    width: inherit;
    height: inherit;
  }
}
@media (min-width: 1300px) {
  .p-spinner--size-small-l {
    width: 3rem;
    height: 3rem;
  }
  .p-spinner--size-medium-l {
    width: 4.5rem;
    height: 4.5rem;
  }
  .p-spinner--size-large-l {
    width: 6.5rem;
    height: 6.5rem;
  }
  .p-spinner--size-inherit-l {
    width: inherit;
    height: inherit;
  }
}
@media (min-width: 1760px) {
  .p-spinner--size-small-xl {
    width: 3rem;
    height: 3rem;
  }
  .p-spinner--size-medium-xl {
    width: 4.5rem;
    height: 4.5rem;
  }
  .p-spinner--size-large-xl {
    width: 6.5rem;
    height: 6.5rem;
  }
  .p-spinner--size-inherit-xl {
    width: inherit;
    height: inherit;
  }
}
.p-spinner__image {
  display: block;
  position: relative;
  fill: none;
  transform: translate3d(0, 0, 0);
}
.p-spinner__bg {
  opacity: 0.4;
}
.p-spinner__fg {
  transform-origin: center center;
  -webkit-animation: rotate var(--p-animation-duration__spinner, 2s) linear infinite, dash var(--p-animation-duration__spinner, 2s) ease-in-out infinite;
          animation: rotate var(--p-animation-duration__spinner, 2s) linear infinite, dash var(--p-animation-duration__spinner, 2s) ease-in-out infinite;
  stroke-dasharray: 40, 200;
  stroke-dashoffset: 0;
  stroke-linecap: round;
}

@-webkit-keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}
@-webkit-keyframes dash {
  0% {
    stroke-dasharray: 3, 1000;
  }
  50% {
    stroke-dasharray: 42, 1000;
  }
  100% {
    stroke-dasharray: 30, 1000;
    stroke-dashoffset: -52;
  }
}
@keyframes dash {
  0% {
    stroke-dasharray: 3, 1000;
  }
  50% {
    stroke-dasharray: 42, 1000;
  }
  100% {
    stroke-dasharray: 30, 1000;
    stroke-dashoffset: -52;
  }
}