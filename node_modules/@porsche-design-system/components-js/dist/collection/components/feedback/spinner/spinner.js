import { Component, Prop, h } from '@stencil/core';
import { mapBreakpointPropToPrefixedClasses, prefix } from '../../../utils';
export class Spinner {
    constructor() {
        /** Size of the spinner. */
        this.size = 'small';
        /** Adapts the spinner color depending on the theme. */
        this.theme = 'light';
    }
    render() {
        const spinnerClasses = Object.assign({ [prefix('spinner')]: true, [prefix(`spinner--theme-${this.theme}`)]: true }, mapBreakpointPropToPrefixedClasses('spinner--size', this.size));
        const imageClasses = prefix('spinner__image');
        const bgClasses = prefix('spinner__bg');
        const fgClasses = prefix('spinner__fg');
        return (h("span", { class: spinnerClasses, "aria-busy": "true", "aria-live": "polite" },
            h("svg", { class: imageClasses, viewBox: "0 0 32 32", width: "100%", height: "100%", role: "img", focusable: "false" },
                h("circle", { class: bgClasses, cx: "50%", cy: "50%", r: "9" }),
                h("circle", { class: fgClasses, cx: "50%", cy: "50%", r: "9" }))));
    }
    static get is() { return "p-spinner"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["spinner.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["spinner.css"]
    }; }
    static get properties() { return {
        "size": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "BreakpointCustomizable<'small' | 'medium' | 'large' | 'inherit'>",
                "resolved": "BreakpointValues<\"small\" | \"medium\" | \"large\" | \"inherit\"> | string",
                "references": {
                    "BreakpointCustomizable": {
                        "location": "import",
                        "path": "../../../utils"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "Size of the spinner."
            },
            "attribute": "size",
            "reflect": false,
            "defaultValue": "'small'"
        },
        "theme": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "'light' | 'dark'",
                "resolved": "\"dark\" | \"light\"",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "Adapts the spinner color depending on the theme."
            },
            "attribute": "theme",
            "reflect": false,
            "defaultValue": "'light'"
        }
    }; }
}
