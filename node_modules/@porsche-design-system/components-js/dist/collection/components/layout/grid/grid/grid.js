import { Component, Host, Prop, h } from '@stencil/core';
import cx from 'classnames';
import { mapBreakpointPropToPrefixedClasses, prefix } from '../../../../utils';
export class Grid {
    constructor() {
        /** Defines the direction of the main and cross axis. The default "row" defines the main axis as horizontal left to right. Also defines the direction for specific breakpoints, like {base: "column", l: "row"}. You always need to provide a base value when doing this. */
        this.direction = 'row';
    }
    render() {
        const gridClasses = cx(prefix('grid'), this.direction !== 'row' && mapBreakpointPropToPrefixedClasses('grid--direction', this.direction));
        return h(Host, { class: gridClasses });
    }
    static get is() { return "p-grid"; }
    static get originalStyleUrls() { return {
        "$": ["grid.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["grid.css"]
    }; }
    static get properties() { return {
        "direction": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "BreakpointCustomizable<'row' | 'row-reverse' | 'column' | 'column-reverse'>",
                "resolved": "BreakpointValues<\"row\" | \"row-reverse\" | \"column\" | \"column-reverse\"> | string",
                "references": {
                    "BreakpointCustomizable": {
                        "location": "import",
                        "path": "../../../../utils"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "Defines the direction of the main and cross axis. The default \"row\" defines the main axis as horizontal left to right. Also defines the direction for specific breakpoints, like {base: \"column\", l: \"row\"}. You always need to provide a base value when doing this."
            },
            "attribute": "direction",
            "reflect": false,
            "defaultValue": "'row'"
        }
    }; }
}
