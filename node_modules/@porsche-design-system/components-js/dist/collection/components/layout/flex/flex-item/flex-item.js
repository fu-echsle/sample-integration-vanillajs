import { Component, Host, Prop, h } from '@stencil/core';
import cx from 'classnames';
import { mapBreakpointPropToPrefixedClasses, prefix } from '../../../../utils';
export class FlexItem {
    constructor() {
        /** The width of the flex item. You can also supply values for specific breakpoints, like {base: "full", l: "one-quarter"}. You always need to provide a base value when doing this. */
        this.width = 'auto';
        /** The offset of the column. You can also supply values for specific breakpoints, like {base: "none", l: "one-quarter"}. You always need to provide a base value when doing this. */
        this.offset = 'none';
        /** Defines how this flex item is aligned along the cross axis. This overwrites the cross axis alignment set by the container. Corresponds to the "alignSelf" css property. */
        this.alignSelf = 'auto';
        /** The ability to allow/disallow the flex child to grow. */
        this.grow = 0;
        /** The ability to allow/disallow the flex child to shrink. */
        this.shrink = 1;
        /** The shorthand property for the combined definition of "shrink", "grow" and "basis" */
        this.flex = 'initial';
    }
    render() {
        const flexItemClasses = cx(prefix('flex__item'), this.width !== 'auto' && mapBreakpointPropToPrefixedClasses('flex__item--width', this.width), this.offset !== 'none' && mapBreakpointPropToPrefixedClasses('flex__item--offset', this.offset), this.alignSelf !== 'auto' && mapBreakpointPropToPrefixedClasses('flex__item--align-self', this.alignSelf), this.grow !== 0 && mapBreakpointPropToPrefixedClasses('flex__item--grow', this.grow), this.shrink !== 1 && mapBreakpointPropToPrefixedClasses('flex__item--shrink', this.shrink), this.flex !== 'initial' && mapBreakpointPropToPrefixedClasses('flex__item-', this.flex));
        return h(Host, { class: flexItemClasses });
    }
    static get is() { return "p-flex-item"; }
    static get originalStyleUrls() { return {
        "$": ["flex-item.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["flex-item.css"]
    }; }
    static get properties() { return {
        "width": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "BreakpointCustomizable<\n  'auto' | 'one-quarter' | 'one-third' | 'half' | 'two-thirds' | 'three-quarters' | 'full'\n  >",
                "resolved": "BreakpointValues<\"auto\" | \"one-quarter\" | \"one-third\" | \"half\" | \"two-thirds\" | \"three-quarters\" | \"full\"> | string",
                "references": {
                    "BreakpointCustomizable": {
                        "location": "import",
                        "path": "../../../../utils"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "The width of the flex item. You can also supply values for specific breakpoints, like {base: \"full\", l: \"one-quarter\"}. You always need to provide a base value when doing this."
            },
            "attribute": "width",
            "reflect": false,
            "defaultValue": "'auto'"
        },
        "offset": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "BreakpointCustomizable<\n  'none' | 'one-quarter' | 'one-third' | 'half' | 'two-thirds' | 'three-quarters'\n  >",
                "resolved": "BreakpointValues<\"none\" | \"one-quarter\" | \"one-third\" | \"half\" | \"two-thirds\" | \"three-quarters\"> | string",
                "references": {
                    "BreakpointCustomizable": {
                        "location": "import",
                        "path": "../../../../utils"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "The offset of the column. You can also supply values for specific breakpoints, like {base: \"none\", l: \"one-quarter\"}. You always need to provide a base value when doing this."
            },
            "attribute": "offset",
            "reflect": false,
            "defaultValue": "'none'"
        },
        "alignSelf": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "BreakpointCustomizable<'auto' | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch'>",
                "resolved": "BreakpointValues<\"center\" | \"flex-start\" | \"flex-end\" | \"stretch\" | \"baseline\" | \"auto\"> | string",
                "references": {
                    "BreakpointCustomizable": {
                        "location": "import",
                        "path": "../../../../utils"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "Defines how this flex item is aligned along the cross axis. This overwrites the cross axis alignment set by the container. Corresponds to the \"alignSelf\" css property."
            },
            "attribute": "align-self",
            "reflect": false,
            "defaultValue": "'auto'"
        },
        "grow": {
            "type": "any",
            "mutable": false,
            "complexType": {
                "original": "BreakpointCustomizable<0 | 1>",
                "resolved": "0 | 1 | BreakpointValues<0 | 1> | string",
                "references": {
                    "BreakpointCustomizable": {
                        "location": "import",
                        "path": "../../../../utils"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "The ability to allow/disallow the flex child to grow."
            },
            "attribute": "grow",
            "reflect": false,
            "defaultValue": "0"
        },
        "shrink": {
            "type": "any",
            "mutable": false,
            "complexType": {
                "original": "BreakpointCustomizable<1 | 0>",
                "resolved": "0 | 1 | BreakpointValues<0 | 1> | string",
                "references": {
                    "BreakpointCustomizable": {
                        "location": "import",
                        "path": "../../../../utils"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "The ability to allow/disallow the flex child to shrink."
            },
            "attribute": "shrink",
            "reflect": false,
            "defaultValue": "1"
        },
        "flex": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "BreakpointCustomizable<'initial' | 'auto' | 'none' | 'equal'>",
                "resolved": "BreakpointValues<\"none\" | \"auto\" | \"initial\" | \"equal\"> | string",
                "references": {
                    "BreakpointCustomizable": {
                        "location": "import",
                        "path": "../../../../utils"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "The shorthand property for the combined definition of \"shrink\", \"grow\" and \"basis\""
            },
            "attribute": "flex",
            "reflect": false,
            "defaultValue": "'initial'"
        }
    }; }
}
