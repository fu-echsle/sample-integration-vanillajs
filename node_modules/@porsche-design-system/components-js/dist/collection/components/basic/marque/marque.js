import { Component, Prop, h } from '@stencil/core';
import { MARQUES_CDN_BASE_URL, MARQUES_MANIFEST } from '@porsche-design-system/assets';
import { prefix } from '../../../utils';
export class Marque {
    constructor() {
        /**
         * Show/hide trademark sign.
         */
        this.trademark = true;
    }
    render() {
        const cdnBaseUrl = ROLLUP_REPLACE_IS_STAGING === 'production' ? MARQUES_CDN_BASE_URL : 'http://localhost:3001/marque';
        const manifestPath = MARQUES_MANIFEST[`porscheMarque${this.trademark ? 'Trademark' : ''}`];
        const buildSrcSet = (size) => Object.entries(manifestPath[size])
            .map(([resolution, fileName]) => `${cdnBaseUrl}/${fileName} ${resolution}`)
            .join(',');
        const marqueClasses = prefix('marque');
        return (h("picture", { class: marqueClasses },
            h("source", { srcSet: buildSrcSet('medium'), media: "(min-width: 1300px)" }),
            h("source", { srcSet: buildSrcSet('small') }),
            h("img", { src: `${cdnBaseUrl}/${manifestPath.medium['2x']}`, alt: "Porsche" })));
    }
    static get is() { return "p-marque"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["marque.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["marque.css"]
    }; }
    static get properties() { return {
        "trademark": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "Show/hide trademark sign."
            },
            "attribute": "trademark",
            "reflect": false,
            "defaultValue": "true"
        }
    }; }
}
