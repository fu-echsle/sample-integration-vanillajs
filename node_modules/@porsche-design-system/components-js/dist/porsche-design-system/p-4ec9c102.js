const t=new Map,n=(n,o)=>{const e=n.getRootNode(),c=(n=>{const s=n.tagName,o=t.get(s);if(void 0!==o)return o;const e=new Map;return t.set(s,e),e})(n);if(void 0===c.get(e)){c.set(e,!0);const t=document.createElement("style");t.appendChild(document.createTextNode(s(o)));const n=(t=>t===document?t.head:t)(e),r=n.querySelector("meta[charset]");null!==r?n.insertBefore(t,r.nextSibling):n.childNodes.length>0?n.insertBefore(t,n.firstChild):n.appendChild(t)}},s=t=>t.replace(/\s{2,}|(\/\*.*\*\/)/g,"").replace(/(:|;)\s/g,"$1").replace(/[\s;]({|})\s?/g,"$1");export{n as i}