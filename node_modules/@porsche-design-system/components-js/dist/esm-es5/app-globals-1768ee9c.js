import { F as FONT_FACE_STYLE_CDN_URL } from './breakpointCustomizable-633ca215.js';
var initBlurOnFocus = function () {
    if (typeof document === 'undefined') {
        return;
    }
    document.addEventListener('click', function () {
        var element = document.activeElement;
        /**
         * this additional condition is an ie11 workaround
         * when the active element get's removed before
         * the listener is called, the activeElement on ie11
         * will be null. (other browsers will always have an
         * active element, body as fallback)
         * you can test it with:
         * document.activeElement.removeNode();
         * console.log(document.activeElement);
         */
        if (element) {
            var optOutElement = element.closest('.p-re-enable-focus-on-click');
            var isExcluded = ['SELECT', 'INPUT', 'TEXTAREA'].includes(element.tagName);
            if (optOutElement === null && !isExcluded) {
                element.blur();
            }
        }
    });
};
var injectGlobalStyle = function () {
    if (typeof document === 'undefined') {
        return;
    }
    var link = document.createElement('link');
    link.href =
        FONT_FACE_STYLE_CDN_URL;
    link.type = 'text/css';
    link.rel = 'stylesheet';
    document.getElementsByTagName('head')[0].appendChild(link);
};
var version = "1.5.4-rc.0";
var TRACKING_URL = 'https://aws.designsystem.porsche.com/porsche-design-system.png';
var trackEvent = function (component, event) {
    {
        fetch(TRACKING_URL + "?" + queryString(Object.assign({ v: version, t: new Date().getTime(), c: component }, (event && { e: event })))).catch(console.warn);
    }
};
var trackLoader = function () { return trackEvent('loader', 'init'); };
var queryString = function (params) { return Object.entries(params)
    .map(function (_a) {
    var key = _a[0], value = _a[1];
    return value instanceof Array
        ? value.map(function (val) { return encodeURI(key) + "=" + encodeURI(val); }).join('&')
        : encodeURI(key) + "=" + encodeURI(value);
})
    .join('&'); };
var encodeURI = function (value) { return encodeURIComponent("" + value); };
var appGlobalScript = function () {
    trackLoader();
    injectGlobalStyle();
    initBlurOnFocus();
};
var globalScripts = appGlobalScript;
export { globalScripts as g };
