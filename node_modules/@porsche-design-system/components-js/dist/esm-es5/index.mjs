var loadingQueueCount = 0;
var resolvePromiseTimeout = null;
var onLoadedPromise;
var resolveOnLoadedPromise;
var checkForPromiseResolve = function () {
    if (loadingQueueCount === 0) {
        /**
         * we debounce 30ms, because the loader is doing the
         * same for the "hydrated" class
         */
        resolvePromiseTimeout = window.setTimeout(function () {
            resolveOnLoadedPromise();
            createOnLoadedPromise();
        }, 30);
    }
};
var createOnLoadedPromise = function () {
    onLoadedPromise = new Promise(function (resolve) {
        resolveOnLoadedPromise = resolve;
    });
};
createOnLoadedPromise();
/**
 * stencil starts to lazy load a component
 */
window.addEventListener('stencil_componentWillLoad', function () {
    loadingQueueCount++;
    if (resolvePromiseTimeout) {
        window.clearTimeout(resolvePromiseTimeout);
    }
});
/**
 * stencil finished to lazy load a component
 */
window.addEventListener('stencil_componentDidLoad', function () {
    loadingQueueCount--;
    checkForPromiseResolve();
});
var componentsReady = function () {
    checkForPromiseResolve();
    return onLoadedPromise;
};
export { componentsReady };
