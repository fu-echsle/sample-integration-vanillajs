'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const breakpointCustomizable = require('./breakpointCustomizable-24b89973.js');
const slottedStyles = require('./slotted-styles-6322de92.js');

const headlineCss = ":host{display:block}::slotted(h1),::slotted(h2),::slotted(h3),::slotted(h4),::slotted(h5),::slotted(h6){margin:0 !important;font-weight:600 !important;font-size:inherit !important}.p-headline{padding:0;margin:0}.p-headline--variant-large-title{font-size:2rem;line-height:1.375;font-family:\"Porsche Next\", \"Arial Narrow\", Arial, sans-serif;font-weight:600}@media (min-width: 760px) and (max-width: 999px){.p-headline--variant-large-title{font-size:2.625rem;line-height:1.2380952381}}@media (min-width: 1000px) and (max-width: 1299px){.p-headline--variant-large-title{font-size:3.25rem;line-height:1.2307692308}}@media (min-width: 1300px) and (max-width: 1759px){.p-headline--variant-large-title{font-size:3.875rem;line-height:1.2258064516}}@media (min-width: 1760px){.p-headline--variant-large-title{font-size:4.5rem;line-height:1.2222222222}}.p-headline--variant-headline-1{font-size:1.75rem;line-height:1.4285714286;font-family:\"Porsche Next\", \"Arial Narrow\", Arial, sans-serif;font-weight:600}@media (min-width: 760px) and (max-width: 999px){.p-headline--variant-headline-1{font-size:2.25rem;line-height:1.3333333333}}@media (min-width: 1000px) and (max-width: 1299px){.p-headline--variant-headline-1{font-size:2.75rem;line-height:1.1818181818}}@media (min-width: 1300px) and (max-width: 1759px){.p-headline--variant-headline-1{font-size:3.25rem;line-height:1.2307692308}}@media (min-width: 1760px){.p-headline--variant-headline-1{font-size:3.75rem;line-height:1.2}}.p-headline--variant-headline-2{font-size:1.5rem;line-height:1.5;font-family:\"Porsche Next\", \"Arial Narrow\", Arial, sans-serif;font-weight:600}@media (min-width: 760px) and (max-width: 999px){.p-headline--variant-headline-2{font-size:1.875rem;line-height:1.3333333333}}@media (min-width: 1000px) and (max-width: 1299px){.p-headline--variant-headline-2{font-size:2.25rem;line-height:1.3333333333}}@media (min-width: 1300px) and (max-width: 1759px){.p-headline--variant-headline-2{font-size:2.625rem;line-height:1.2380952381}}@media (min-width: 1760px){.p-headline--variant-headline-2{font-size:3rem;line-height:1.25}}.p-headline--variant-headline-3{font-size:1.25rem;line-height:1.4;font-family:\"Porsche Next\", \"Arial Narrow\", Arial, sans-serif;font-weight:600}@media (min-width: 760px) and (max-width: 999px){.p-headline--variant-headline-3{font-size:1.5rem;line-height:1.5}}@media (min-width: 1000px) and (max-width: 1299px){.p-headline--variant-headline-3{font-size:1.75rem;line-height:1.4285714286}}@media (min-width: 1300px) and (max-width: 1759px){.p-headline--variant-headline-3{font-size:2rem;line-height:1.375}}@media (min-width: 1760px){.p-headline--variant-headline-3{font-size:2.25rem;line-height:1.3333333333}}.p-headline--variant-headline-4{font-size:1rem;line-height:1.5;font-family:\"Porsche Next\", \"Arial Narrow\", Arial, sans-serif;font-weight:600}@media (min-width: 760px) and (max-width: 999px){.p-headline--variant-headline-4{font-size:1.125rem;line-height:1.5555555556}}@media (min-width: 1000px) and (max-width: 1299px){.p-headline--variant-headline-4{font-size:1.25rem;line-height:1.4}}@media (min-width: 1300px) and (max-width: 1759px){.p-headline--variant-headline-4{font-size:1.375rem;line-height:1.4545454545}}@media (min-width: 1760px){.p-headline--variant-headline-4{font-size:1.5rem;line-height:1.5}}.p-headline--variant-headline-5{font-size:1rem;line-height:1.5;font-family:\"Porsche Next\", \"Arial Narrow\", Arial, sans-serif;font-weight:600}.p-headline--align-left{text-align:left}.p-headline--align-center{text-align:center}.p-headline--align-right{text-align:right}.p-headline--color-default.p-headline--theme-light{color:#000}.p-headline--color-default.p-headline--theme-dark{color:#fff}.p-headline--color-inherit{color:inherit}.p-headline--ellipsis{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}";

class Headline {
    constructor(hostRef) {
        breakpointCustomizable.registerInstance(this, hostRef);
        /** Style of the headline. */
        this.variant = 'headline-1';
        /** Sets a custom HTML tag depending of the usage of the headline component. */
        this.tag = undefined;
        /** Text alignment of the component. */
        this.align = 'left';
        /** Basic text color variations depending on theme property. */
        this.color = 'default';
        /** Adds an ellipsis to a single line of text if it overflows. */
        this.ellipsis = false;
        /** Adapts the text color depending on the theme. Has no effect when "inherit" is set as color prop. */
        this.theme = 'light';
    }
    componentWillLoad() {
        this.addSlottedStyles();
    }
    render() {
        const variantToTagMap = {
            'large-title': 'h1',
            'headline-1': 'h1',
            'headline-2': 'h2',
            'headline-3': 'h3',
            'headline-4': 'h4',
            'headline-5': 'h5'
        };
        const TagType = this.hasSlottedHeadlineTag ? 'div' : this.tag || variantToTagMap[this.variant];
        const headlineClasses = {
            [breakpointCustomizable.prefix('headline')]: true,
            [breakpointCustomizable.prefix(`headline--variant-${this.variant}`)]: true,
            [breakpointCustomizable.prefix(`headline--align-${this.align}`)]: true,
            [breakpointCustomizable.prefix(`headline--color-${this.color}`)]: true,
            [breakpointCustomizable.prefix('headline--ellipsis')]: this.ellipsis,
            [breakpointCustomizable.prefix(`headline--theme-${this.theme}`)]: this.color !== 'inherit'
        };
        return (breakpointCustomizable.h(TagType, { class: headlineClasses }, breakpointCustomizable.h("slot", null)));
    }
    get hasSlottedHeadlineTag() {
        const el = this.host.querySelector(':first-child');
        return el === null || el === void 0 ? void 0 : el.matches('h1, h2, h3, h4, h5, h6');
    }
    addSlottedStyles() {
        const tagName = this.host.tagName.toLowerCase();
        const style = `${tagName} a {
      color: inherit;
      text-decoration: none;
    }`;
        slottedStyles.insertSlottedStyles(this.host, style);
    }
    get host() { return breakpointCustomizable.getElement(this); }
}
Headline.style = headlineCss;

exports.p_headline = Headline;
