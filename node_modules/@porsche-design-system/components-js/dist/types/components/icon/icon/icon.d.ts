/// <reference types="react" />
import { Theme, IconName } from '../../../types';
export declare class Icon {
    el: HTMLElement;
    /**
     * Specifies which icon to use.
     */
    name?: IconName;
    /**
     * Specifies a whole icon path which can be used for custom icons.
     */
    source?: string;
    /**
     * @internal
     * Specifies which icon variant to use.
     */
    variant?: 'outline' | 'filled';
    /** Basic color variations depending on theme property. */
    color?: 'brand' | 'default' | 'neutral-contrast-high' | 'neutral-contrast-medium' | 'neutral-contrast-low' | 'notification-success' | 'notification-warning' | 'notification-error' | 'notification-neutral' | 'inherit';
    /**
     * The size of the icon.
     */
    size?: 'small' | 'medium' | 'large' | 'inherit';
    /**
     * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.
     * Default, `false`.
     */
    lazy?: boolean;
    /** Adapts the text color depending on the theme. Has no effect when "inherit" is set as color prop. */
    theme?: Theme;
    private svgContent?;
    private isVisible;
    private io?;
    loadIcon(): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    render(): JSX.Element;
    private waitUntilVisible;
}
