import { Component, Host, Prop, h } from '@stencil/core';
import { DEFAULT_ITEMS_LIST } from '../../services/constants';
export class MobileShopsAndMore {
    constructor() {
        this.items = DEFAULT_ITEMS_LIST;
    }
    render() {
        return (h(Host, { class: "mobile-shops-and-more" }, this.items.map((item) => {
            let overlayRef;
            return (h("div", { class: "shops-and-more-container" },
                h("phn-shops-and-more-item", { item: item, class: "shops-and-more-item", onClick: () => {
                        overlayRef.style.display = 'block';
                        this.setActiveDrawer(overlayRef, 2);
                    } }),
                h("phn-drawer-shops-and-more", { headline: item.Items.length === 1 ? item.Text : '', item: item.Items.length === 1 ? item.Items[0] : item, class: "shops-and-more-overlay", setActiveDrawer: this.setActiveDrawer, closeActiveDrawer: this.closeActiveDrawer, ref: (el) => (overlayRef = el) })));
        })));
    }
    static get is() { return "phn-mobile-shops-and-more"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() { return {
        "$": ["mobile-shops-and-more.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["mobile-shops-and-more.css"]
    }; }
    static get properties() { return {
        "items": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "Item[]",
                "resolved": "Item[]",
                "references": {
                    "Item": {
                        "location": "import",
                        "path": "../entities/item"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "defaultValue": "DEFAULT_ITEMS_LIST"
        },
        "setActiveDrawer": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "(el: HTMLElement, level: number) => void",
                "resolved": "(el: HTMLElement, level: number) => void",
                "references": {
                    "HTMLElement": {
                        "location": "global"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "closeActiveDrawer": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "(level: number) => void",
                "resolved": "(level: number) => void",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        }
    }; }
}
