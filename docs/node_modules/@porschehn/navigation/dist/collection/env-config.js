import configJson from './config.json';
import featureJson from './feature-toggles.json';
import { DEFAULT_ENVIRONMENT, FEATURE_OVERRIDE_ENABLED } from './services/constants';
export const config = (env = DEFAULT_ENVIRONMENT) => configJson[env] || configJson['local'];
const getOverrideValue = (feature) => {
    const queryString = window.location.search.split('?')[1];
    if (queryString) {
        const queryStringArray = queryString.split('&');
        const featureQuery = queryStringArray.find((query) => query.indexOf(feature) > -1);
        if (featureQuery) {
            const stringValue = featureQuery.split('=')[1];
            if (stringValue === 'true') {
                return true;
            }
            else if (stringValue === 'false') {
                return false;
            }
        }
    }
};
const isOverrideValid = (env, overrideValue) => featureJson[env][FEATURE_OVERRIDE_ENABLED] && overrideValue !== undefined;
export const isFeatureEnabled = (feature, env = DEFAULT_ENVIRONMENT) => {
    const overrideValue = getOverrideValue(feature);
    return isOverrideValid(env, overrideValue) ? overrideValue : featureJson[env][feature];
};
